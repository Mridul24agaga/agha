{
  "initialUrl": "https://softgen.ai/",
  "initialResearchSummary": "Alright, let’s take a casual look at that URL, https://softgen.ai/. So, first up, the name “softgen” kinda hints that we're diving into the realm of software generation, right? Pair that with the “.ai” at the end, and it’s pretty clear they’re probably messing around with some artificial intelligence stuff. I mean, it’s all the rage these days! Everyone’s hyped about how AI can churn out code or help in building applications faster and smarter. So this site might be all about using AI to develop software solutions, tools, or even services that help businesses or developers get their act together without spending months coding from scratch. Imagine a platform where you could just describe what you want, and boom—AI does the heavy lifting. That’s the dream, right? Something that simplifies the whole software development lifecycle, maybe even tailoring things to specific industries or needs. And since “softgen” sounds a bit like “softgenius,” I wouldn’t be surprised if they play up the intelligence angle. They might have some cool features for automating mundane tasks, generating code snippets, or even providing suggestions for best practices in coding. You know, like having that buddy who’s always got your back when you're stuck on a project. Plus, these kinds of sites typically love to boast about user-friendly interfaces or no-code/low-code solutions because, let’s be real, not everyone is a programming whiz. So, if you’re a small business owner or even a creative trying to launch an app but you’re more of a visionary than a coder, this site could be your best friend. There’s also a chance they have some sort of community or resources. You know, like forums or tutorials that help newbies get their feet wet in the tech world. Everyone loves a good learning hub where you can soak up knowledge and chat with other like-minded folks. In the end, I’d say Softgen.ai sounds like a pretty rad website that’s tapping into the potential of AI to make software creation easier, faster, and maybe even a bit more fun. Whether it’s for seasoned devs or total newcomers, they’re probably trying to bridge that gap and democratize access to technology. So, picture this: you grab a drink, kick back, and start exploring what they have on offer. Could be a game-changer for anyone looking to dip their toes into the world of app development without the usual headaches. Cheers to that!",
  "researchResults": [
    {
      "url": "https://www.quora.com/Is-AI-programming-machine-learning-easier-to-code-than-conventional-programming-software-engineering",
      "content": "Is AI programming/machine learning easier to code than conventional programming/software engineering? - Quora Something went wrong. Wait a moment and try again. Try again Skip to content Skip to search Sign In Is AI programming/machine learning easier to code than conventional programming/software engineering? All related (34) Sort Recommended Prakash Deivakani Love Genetic Algorithms, Simulated Annealing, Mutation, MCTS · Author has 337 answers and 1.2M answer views · Updated 4y Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural N Continue Reading Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural Networks to solve AI problems which I do not have knowledge about. You can search about that as well if you are interested. Upvote · 91 Sponsored by Amazon Web Services Boost your innovation with AWS Activate. Unlock the potential of generative AI for your startup with AWS credits. Sign Up 92 Related questions More answers below Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? Arun Singh|M.Tech NITB M.Tech in Machine Learning & Mathematics, Maulana Azad National Institute of Technology, Bhopal (Graduated 2020) · 4y If I say only with respect to turning your ideas into code it’s definitely a YES, with all available tools from scikit-learn to Tensorflow you can swiftly turn your thought process into code. It’s not because ML/AI is easier than software engineering it’s mainly because of two reasons : Some brilliant minds have collectively put in efforts to make the coding part lite and this is done primarily because this field is a combination of many different fields put together from the simplest math of numbers, vectors, derivatives, to complex maths like Fast Fourier Transforms, 2nd order partial differe Continue Reading If I say only with respect to turning your ideas into code it’s definitely a YES, with all available tools from scikit-learn to Tensorflow you can swiftly turn your thought process into code. It’s not because ML/AI is easier than software engineering it’s mainly because of two reasons : Some brilliant minds have collectively put in efforts to make the coding part lite and this is done primarily because this field is a combination of many different fields put together from the simplest math of numbers, vectors, derivatives, to complex maths like Fast Fourier Transforms, 2nd order partial differentiation, signal processing, linear algebra, probability, statistics, physics, human biology, etc. etc. And many early contributors and modern people who are contributing to the cutting edge research are from Non-Computer Science background (eg. \"Godfather of Deep Learning\" -Geoffrey Hinton ) and many more to say. Also, if today ML/AI has become everyone's favorite it’s all because of the state of the art and complex software engineering that has gone into it making things look simple at its crust. Upvote · Ranjith S Studied at Sri Krishna College of Engineering and Technology, Tamil Nadu, India (SKCET) (Graduated 2021) · 5y Al is totally different from conventional programming. Probably you can write code using tools and libraries, but that doesn't make any sense. If you are beginner then try code simple AI Technics by your won. That gives you the in depth knowledge of background process, otherwise if you simply follow tools based learning for tiny problems that's simply equal to hello world program. But one point of time if you working on large project at that point of time manual implementation won't work. But there are many fine tune works are there….. Upvote · Mike West Lives in Virginia (2024–present) · Upvoted by Paul McQuesten , PhD Computer Science & Neuroevolution, The University of Texas at Austin (2002)Author has 12.8K answers and 71.1M answer views · Updated 3y Related How much time does it take to become a machine learning engineer? That will depend on the individuals knowledge and skill. If you happen to be a Python programmer with really solid SQL skill then you’ll learning curve is going to be short. Why? Because what most of us do all day is work with SQL and Python. If you know nothing about this space or data then you’re looking at 5–6 years before you’re doing entry level machine learning in the real-world. Look at this job posting below. That first requirement took me years to learn and become comfortable working with in the real-world. I know people on Quora find SQL easy, that is… until the interview… where the fai Continue Reading That will depend on the individuals knowledge and skill. If you happen to be a Python programmer with really solid SQL skill then you’ll learning curve is going to be short. Why? Because what most of us do all day is work with SQL and Python. If you know nothing about this space or data then you’re looking at 5–6 years before you’re doing entry level machine learning in the real-world. Look at this job posting below. That first requirement took me years to learn and become comfortable working with in the real-world. I know people on Quora find SQL easy, that is… until the interview… where the failure rate is around 90%. That’s just one bullet point!! Real-world machine learning is not modeling, it’s data cleansing. If you can’t source and clean your own data then you won’t be working in the real-world. Around 80% of all applied machine learning is data cleansing. I didn’t make this up, this comes from studies and surveys from those in the real-world. There’s a reason why the salaries and packages are big in this space, it’s because the knowledge, skills and experience are big. There is no easy path and most will need to start working in a lesser role, like a data analyst or business analyst in order to make the jump to machine learning. Now, this shouldn’t discourage you. It should help you set some realistic expectations of what’s really required to work in this space. When you’re ready to dig in and learn this platform will get you there. It’s not an easy path and most simply won’t make it. Take it from those in the real-world. Upvote · 999117 91 9938 Sponsored by Avatrade AvaTrade × UAE Pro League – Your Winning Strategy. Great players and smart traders think ahead. Trade with AvaTrade and take control today. Start Now 9945 Related questions More answers below How do I program simple AI software? Can artificial intelligence (AI) learn how to code? If so, why would anyone bother learning programming anymore if an AI can just program itself? What is the best undergraduate double major to pursue a career in AI or machine learning? How does machine learning differ from software engineering? What is required to get into machine learning from software engineering? Can I learn programming and machine learning both at the same time? Ashutosh Singh Software Consultant & Stock Analyst. · Author has 4.5K answers and 3.9M answer views · 5y Yes if you are good in Mathematics. Modern AI is all about your understanding and grip over discrete as well as analytical mathematics. It's about building AI models which are nothing but algebraic equations/functions which satisfy a particular curve. So it's all about polynomials, calculus, statistics, probability and very little of ' if-else-then' type of logic. Upvote · 91 Gongtao Yang Phd of in None of Your Business & Nuclear Warfare, Jialidun University (Graduated 2025) · Author has 145 answers and 320.2K answer views · 5y Related Is AI engineering more difficult than software engineering? The wording is a little bit strange. I’d make it as “Is Engineering portion in AI more difficult than software engineering?” Industrial AI field (academic is not counted in my answer) can be divided into several chuncks in my opinion: Model reaserch & design. This is the part where data scientists gather in a dark room and work their black magic. To a software engineer like me, this is just witchcraft. This is all math and statistics. My understanding is this is highly theoretical. Definitely harder than software engineering. Model training. This is where software engineers comes in. Data scient Continue Reading The wording is a little bit strange. I’d make it as “Is Engineering portion in AI more difficult than software engineering?” Industrial AI field (academic is not counted in my answer) can be divided into several chuncks in my opinion: Model reaserch & design. This is the part where data scientists gather in a dark room and work their black magic. To a software engineer like me, this is just witchcraft. This is all math and statistics. My understanding is this is highly theoretical. Definitely harder than software engineering. Model training. This is where software engineers comes in. Data scientists can design a beautiful AI model, but it will need training data to be fine tuned. The infrastructure requirement can be quiet high in some cases. A model might need a large quantity of data, and there are usually lots of model training going on at the same time. This is just average software engineering. It’s just another high volumn highly scallable project (*shrug). The specs can be different, for example, in stead of traditional SQL DB, HDFS or NoSQL is used. Different specs, but nothing super special. Model Serving. This is the fun part. This is the part where we present our AI overlord to the world. When a model is trained and considered capable of serving real traffic, the model will be put into production. Usually at this point, this model is just a black box. The system feed data to the model and expect an answer from it. Software engineers just need to convert the data into acceptable format and covert the output into useful info for other parts of the system. AI is just another module, and that’s that. In my experience, AI usually is NOT the hardest part of the project. Upvote · 98 Promoted by Bayut Bayut UAE Lives in Dubai, United Arab Emirates · Feb 12 What are the top 5 reasons to invest in an off-plan property in Dubai? Top 5 Reasons to Invest in Off-Plan Property in Dubai Are you looking to maximise your capital gains? Investing in off‐plan properties in Dubai is widely regarded as an excellent opportunity for first‐time buyers and seasoned investors. This investment offers a chance to capitalise on lucrative development projects that promise substantial capital gains due to the high demand for rental and properties for sale in the emirate. Here are the top 5 reasons to invest in off‐plan properties in Dubai. Attractive Pricing with Flexible Payment Plans One of the biggest advantages of off-plan property in Continue Reading Top 5 Reasons to Invest in Off-Plan Property in Dubai Are you looking to maximise your capital gains? Investing in off‐plan properties in Dubai is widely regarded as an excellent opportunity for first‐time buyers and seasoned investors. This investment offers a chance to capitalise on lucrative development projects that promise substantial capital gains due to the high demand for rental and properties for sale in the emirate. Here are the top 5 reasons to invest in off‐plan properties in Dubai. Attractive Pricing with Flexible Payment Plans One of the biggest advantages of off-plan property in Dubai is that they are available at a lower entry price than completed properties. Developers often incentivise early buyers with competitive pricing and staggered payment schemes. It indicates that you only pay a fraction upfront and the balance over the construction period. This financial flexibility not only eases cash flow but improves your overall return as real estate market value rises over time. High Potential for Capital Appreciation When you consider off-plan property investment opportunities in Dubai, keep in mind that as the construction progresses, the property value tends to appreciate. Dubai’s property market is known for its rapid growth and dynamic demand, so purchasing at an early stage can translate into significant capital gains by the time the development is completed. It's a surefire way to get high-rental yield in Dubai from your investments. Binghatti Hills is one of the most prominent off-plan projects in Dubai (Image Credit: Binghatti Developers Official Website) Customisation and Style the Property Your Way Another benefit of investment in pre-construction properties in Dubai is that you have a chance to decorate and style the apartment, villa or townhouse according to your preferences and style. Many off-plan developers in Dubai allow buyers to choose certain design elements or upgrade materials, thereby creating a home that not only suits your tastes but may also command a premium value later on. Buyer Protection under Strong Regulatory Framework Dubai has introduced strict regulations through the Real Estate Regulatory Agency (RERA) to protect buyers. These rules require developers to securely hold buyer funds in escrow accounts and comply with rigorous construction and delivery standards. This strong legal framework reduces the risks linked to off-plan investments, offering investors greater peace of mind. Diverse and Future-Ready Developments The off‐plan property market in Dubai offers a wide range of property types, from apartments to villas for sale, often located in emerging areas that are set to benefit from significant infrastructural and community developments. This diversity enables you to choose a property that aligns with your lifestyle and investment goals. Image credit: Oasis by Emaar Most Popular Areas with Off-Plan Property Investment in Dubai As per the latest Annual Dubai Off-Plan Property Report 2024, off-plan apartments for sale in Dubai were in demand throughout the previous year. Top Areas with Off-Plan Flats for Sale in Dubai The trends analysis indicates that the majority of transactions involving off-plan apartments in Dubai were conducted in the following neighbourhoods: Jumeirah Village Circle (JVC) – Area & Community Guide » Bayut™ Jumeirah Village Circle (JVC) area guide from Bayut™: ✓Amenities ✓Rental & For Sale Properties ✓Market Overview ✓Schools https://www.bayut.com/area-guides/jumeirah-village-circle/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubai Business Bay Dubai Hills Estate Sobha Hartland 2 Meydan City Top Areas with Off-Plan Villas for Sale in Dubai Investors were keen on investing in larger properties and as per the latest report, here are the most popular areas with off-plan villas for sale in Dubai: The Valley by Emaar Dubailand Area Guide | Bayut Dubailand is an area that is split into many different communities, each with their own amenities. The area displays many different entertainment, leisure and residential aspects for residents to enjoy. In this area guide, we discuss this vibrant community developed by Dubai Properties. https://www.bayut.com/area-guides/dubailand/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubaiDubai South – Area, Neighbourhood & Lifestyle Guide » Bayut™ Dubai South area, home to the Al Maktoum International Airport. Read this guide by Bayut to learn more about location and amenities. https://www.bayut.com/area-guides/dubai-south/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubai Dubai Investment Park (DIP) Athlon by ALDAR The combination of competitive pricing, the promise of rising values, customisation potential, strong regulatory safeguards, and the availability of a wide array of projects makes off‐plan property investment in Dubai particularly appealing. For more details on multiple property types for sale and rent download the Bayut app available on Play Store and App Store. Upvote · 94 Haocheng Lin MSc in AI for Sustainable Development, University College London (UCL) (Graduated 2024) · Author has 410 answers and 1.7M answer views · 1y Related How does machine learning differ from traditional programming methods? Figure 1: A flow diagram comparing traditional programming with machine learning. Machine learning distinctly approaches problems compared to traditional programming methods. In conventional programming, programmers create algorithms and data structures to guide the program step-by-step towards generating an output. On the other hand, machine learning applies datasets to enable the program to learn patterns. One of the vital advantages of machine learning over traditional programming methods is its flexibility and adaptability to new datasets. Conventional programming is well-suited for clearly Continue Reading Figure 1: A flow diagram comparing traditional programming with machine learning. Machine learning distinctly approaches problems compared to traditional programming methods. In conventional programming, programmers create algorithms and data structures to guide the program step-by-step towards generating an output. On the other hand, machine learning applies datasets to enable the program to learn patterns. One of the vital advantages of machine learning over traditional programming methods is its flexibility and adaptability to new datasets. Conventional programming is well-suited for clearly defined problems, such as: Arithmetic operations Determining the number of prime elements in a list Web development Scientific Research Mobile Game Development However, machine learning shines when there are no explicit rules for the algorithm: Facial recognition Natural language processing Recommendation Systems Self-driving cars Disease diagnosis Figure 2: An image highlighting the different areas where machine learning is applied. When it comes to programming, traditional methods make debugging easier than machine learning, which can be viewed as a \"black box\" operation. However, developers may improve machine learning models by adjusting datasets or choosing different models. With traditional programming, debugging enables developers to fix errors as they occur during the debugging process. In situations where clear rules are not easily accessible, machine learning provides a distinct and effective solution to problem-solving. Its flexibility and ability to enhance through data manipulation make it a valuable resource in multiple areas, such as facial recognition and language processing. Upvote · 9914 91 91 David Johnston Principal Data Scientist at ThoughtWorks · Author has 424 answers and 1.9M answer views · 5y Related Is AI engineering more difficult than software engineering? AI engineering is also software engineering. But Yes and No. The promise of AI (ML, data science whatever you call it) is that you can use a model instead of a large set of hand written rules. Let’s discuss why that can be a good thing. Data science is an approach to dealing with data processing and computing in the presence of uncertainty. This is where it shines. If the data is a perfect representation of reality and the problem can be done by doing a straightforward computation then data science or model based approaches are not recommended. Just follow the simple set of rules and regular so Continue Reading AI engineering is also software engineering. But Yes and No. The promise of AI (ML, data science whatever you call it) is that you can use a model instead of a large set of hand written rules. Let’s discuss why that can be a good thing. Data science is an approach to dealing with data processing and computing in the presence of uncertainty. This is where it shines. If the data is a perfect representation of reality and the problem can be done by doing a straightforward computation then data science or model based approaches are not recommended. Just follow the simple set of rules and regular software delivery approaches. But often there are cases where the data is only a fuzzy representation of the things in the world being modeled. For example, your phone reports your location, but it’s not always correct. Your list of restaurants has a “food category” flag, but not every restaurants really fits into your set of categories and some are just wrong. The closing times are only approximate. Some are duplicated. Some are missing. This is the reality you face when you are trying to recommend which restaurant someone should go to. When you follow the typical approach to solving this, you start by assuming the data is a correct representation of reality. Then the problem is pretty easy. Just use a few rules. Search in a radius from the current location for the restaurant categories you specify. Then you start dealing with the long list of “edge cases”. What if the location is wrong? Can you detect that and update the value or at least alert the user? How do we classify Sri Lankan food? Maybe allow restaurants to have more than one category? Asian and also Indian? What if the restaurant is close as the crow flies but is actually on an Island whose ferry runs only every hour until midnight? How can I detect if a restaurant is actually out of business? All of these details end up requiring a long list of rules. And worse, those rules sometimes interact with each other and make it very difficult to test all of the scenarios. Too many combinations. The point is that you started with what seemed like a simple task but the poor fidelity of the data to the things in the real world ended up making it very complicated and hard to develop, test and maintain. Enter the model based approach. What if we just choose not to worry about all the details of what can go wrong and make the assumption that people usually figure out good places to go eventually? Our problem is not so much about helping them choose the right place. It’s about helping them making that choice quicker. As times goes on, we actually gather an enormous amount of data. We can see for example that people in Time Square who type in “Gourmet Pizza” at 2am on weekdays usually end up going to Gina’s Trattoria. That is, we learn what to recommend without having to deal with the reasons for the recommendation. Even if Gina’s Trattoria is classified as “Mediterranean” not “Pizza”, we correctly send people there who type “Pizza”. Figuring out where people go rather than why they go there is much easier. In fact, it can be easily represented with a model whose parameters can be trained from data. The data can change without having to have to change the software. You can rerun the training on more recent data to get an updated model. With this approach there is a far smaller set of rules to maintain. It’s an approach which is tolerant to “bad data”. The data, in fact, need not have any relation to known things in world. It simply needs to correlate with the target variable to be useful. So this way of solving problems can result in overall simpler software than the standard approach of explicitly writing rules to deal with every scenario. On the other hand, it can also be more difficult. In reality it’s just different. But as alluded to above, it’s not always the best approach. If a rules based approach can handle all the edge cases without too much complexity it is often the preferred approach. One advantage at least is that when it gives a bad result, you can consider that a bug and go see why it happened and maybe fix it. With the model based approach you are conceding the fact that the predicting is not always going to be good. You are going to quantify how often it is good and try to let the model adjust to maximize that as best it can. But that means that a bad result is not really to be considered a bug. It can be very hard to see why it had a bad result. The model is targeting averages not individual cases. But this makes finding and fixing problems by tracing individual cases not effective. But the customer is not an average. The customer is an individual case. When they have a complaint about their case they want it fixed. But the model based approach gives you little ability to do that. Developers can often have a lot of trouble translating their usual methodology to these kinds of applications. The applications can seem mysterious. And they will sometimes feel that this approach is in fact harder. So that’s a long way of saying Yes and No and so nothing definitive. It really depends. But I hope this helps clarify the reasons why it could go either way. If you understand these reasons you can choose the right approach so that your solution seems like the easier way to you. Upvote · 9919 92 92 Sponsored by appfast Increase your App installs and Reviews. We customize the suitable keyword strategy for your app to boost rankings. Learn More Mike West Lives in Virginia (2024–present) · Upvoted by Sunny Manio , PhD Computer Science (2020)Author has 12.8K answers and 71.1M answer views · 4y Related Do you need to master a programming language first before starting with AI and machine learning? Master… nope. Have a solid foundation… yep. If you don’t have a solid foundation in Python and SQL you’ll never get a job in the applied space as a machine learning engineer. Almost every job post within this space will have two core themes. Python and SQL. Imagine paying someone 150K or more who can’t source or wrangle their own data? You’d be laughed out of most IT shops. Without SQL and Python skills your other skills are worthless… I promise. Upvote · 9935 94 Zeeshan Zia PhD in Computer Vision and Machine Learning · Upvoted by Jukka Toivanen , PhD Computer Science, University of Helsinki and Shivendra Panicker , Masters of Science Computer Science, New York University (2018)Author has 1K answers and 6.2M answer views · Updated 7y Related Is machine learning more complex than software engineering? Is there any design or creativity involved in ML as in software engineering? The central premise of machine learning is that you should be able to learn algorithms from data. People had been trying to write algorithms to recognize general objects in images for four to five decades. Smart people. PhDs from MIT and the like! Yet, they couldn’t figure it out*. Along came machine learning algorithms, or let’s call them “meta-programs”; and they were able to “generate” programs (machine learning models) that robustly detect objects! Multiply this phenomenon across many different fields, over the past decade or two. Andrew Ng has a fantastic rule of thumb, that any (intellectual Continue Reading The central premise of machine learning is that you should be able to learn algorithms from data. People had been trying to write algorithms to recognize general objects in images for four to five decades. Smart people. PhDs from MIT and the like! Yet, they couldn’t figure it out*. Along came machine learning algorithms, or let’s call them “meta-programs”; and they were able to “generate” programs (machine learning models) that robustly detect objects! Multiply this phenomenon across many different fields, over the past decade or two. Andrew Ng has a fantastic rule of thumb, that any (intellectual) task that humans can perform in less than a second, is likely better dealt with using machine learning; whereas tasks which humans take more than a second to perform are probably more suited for explicit hand-crafted software systems. Applied ML is unlike software engineering or math. Even if you understand the meta-algorithm e.g. convolutional neural networks or SVM or Random Forests perfectly well; there is no guarantee that you’ll be able to train them for a given task. You need an entirely separate set of skills to do productive work with ML tools, than the skills you need to leverage a programming language, or the skills you need to mathematically model a problem. One such skill is the capability to come up with good ideas to debug an ML model: what kind of intermediate results can you visualize? can you invent metrics to figure out what’s going wrong? Your evaluation also needs to be a lot more data-driven in ML, than the typical software engineer or mathematician’s mindset. Most expert software devs I know, keep jumping from one ML model/pipeline to another, when the first one doesn’t work. Most mathematicians I know, keep endlessly trying to model the problem making their model more and more complex (and failing, like the object recognition folks did). So it’s an entirely different skillset. One that’s not appreciated or understood well enough by industry today. An attempt at comparison would be like comparing apples to oranges though! *The first PhD on the topic at MIT was awarded in 1964; and the first practically relevant “production quality” systems came out in early 2000s. Upvote · 999219 9912 98 Naitik Chandak Spent 5+ years in Machine learning · Author has 375 answers and 1.2M answer views · 5y Related Is machine learning completely different from software engineering? No, Machine Learning is not completely different from Software Engineering. But We can say that Machine learning is also a part of Software Engineering. Software Engineering is a very broad term which includes all the types of product development. Machine learning is concepts derived from Artificial Intelligence. A different set of algorithms we can implement in software engineering (product development) to make it more smart and intelligent, so it can be capable enough to predict the results based on the provided training data set. If you wondering, to differentiate Software Engineering and Mac Continue Reading No, Machine Learning is not completely different from Software Engineering. But We can say that Machine learning is also a part of Software Engineering. Software Engineering is a very broad term which includes all the types of product development. Machine learning is concepts derived from Artificial Intelligence. A different set of algorithms we can implement in software engineering (product development) to make it more smart and intelligent, so it can be capable enough to predict the results based on the provided training data set. If you wondering, to differentiate Software Engineering and Machine Learning, You can consider as, Software Engineering is the top level of everything including Data Science, AI, Machine Learning, Big data, Computer Vision, Cognitive Computing. All the keywords mentioned over here are just part of Software Engineering. If you are considering Software Engineering just by the Software Development Life Cycle (SDLC) then also, It has a number of models like Waterfall, Agile, Scrum, Iterative, Spiral, etc. Whereas in Machine learning we have a different set of algorithms such as Naive-Bayes, Gaussian, Taylor, Regression, Classification, etc. Don’t get confused between Software Engineering and Software Development Life Cycle, with Machine Learning. Hope this helps. Let me know if you have any query regarding the same. Upvote · 97 Andrew James Senior Product Manager at Oracle · Updated 3y Related Should I go for software development or Machine learning or Android development, considering the job perspective? Its funny you ask that question. I still remember my colleagues and juniors asked me the same. It's not which field is good. Its about how good you are at that (any) field. Every field is unique. I have seen people enjoying their work in BPO (earning lot of money) and I have seen people finding their lives miserable at Google (Development). The following question has been asked to me once: “ What are the skills you need to succeed as a professional in the digital future ?” And here's what I have replied, “As long as people have Cognitive Ability and willing to empty their hearts to learn somethi Continue Reading Its funny you ask that question. I still remember my colleagues and juniors asked me the same. It's not which field is good. Its about how good you are at that (any) field. Every field is unique. I have seen people enjoying their work in BPO (earning lot of money) and I have seen people finding their lives miserable at Google (Development). The following question has been asked to me once: “ What are the skills you need to succeed as a professional in the digital future ?” And here's what I have replied, “As long as people have Cognitive Ability and willing to empty their hearts to learn something new, they can always survive.” Isn't that true? Choose a field. Keep learning. Master it. Put your thoughts and creativity. Innovate. Forget about the money and do the job passionately. You will find yourself moving higher in your life. Even in the storm, you cannot be a normal bird that runs and hide in the nest. You should be an eagle who enjoys the storm and rise above it. Good luck. Upvote · 999180 94 91 Theresa Renee Studied Computer Science & Web Design (Graduated 2005) · 2y Related Should I continue software engineering or learn AI & machine learning? Which is the future? Ultimately, the choice is yours. If by Software Engineering you are referring to programming or coding, within time, AI will phase out the majority of programmers, coders, and data analysts. This process will first disrupt the industry just as video streaming services replaced cable television and brick & mortar video stores; software programs replaced Accountants; rideshare drivers replaced taxis. I often share a proverbial or two with my students about life, business, and Tech. \"To thrive is to innovate. To survive is to think ahead of the curve. Do neither and get left behind.\" another is, Continue Reading Ultimately, the choice is yours. If by Software Engineering you are referring to programming or coding, within time, AI will phase out the majority of programmers, coders, and data analysts. This process will first disrupt the industry just as video streaming services replaced cable television and brick & mortar video stores; software programs replaced Accountants; rideshare drivers replaced taxis. I often share a proverbial or two with my students about life, business, and Tech. \"To thrive is to innovate. To survive is to think ahead of the curve. Do neither and get left behind.\" another is, \"While not every assumption comes to fruition, it is best to be prepared rather than deny it.\" Furthermore, while AI & Machine Learning are intriguing domains of Software Engineering, many fields in computing have seen a rapid increase in demand since 2018; Blockchain is one among them. With the rampant progression of AI & Machine Learning, Cybersecurity is critical. Moreover, Blockchain and Artificial Intelligence (AI) are merging. Therefore, Cybersecurity and blockchain are inextricably related. Cybersecurity is becoming increasingly crucial to developing AI and machine learning (ML). Such as, increased data usage brings greater security risks, privacy concerns, and data misuse. As a result, cyber-attacks have become a significant concern for organizations that rely on AI and ML. Additionally, Cybersecurity has a substantial impact on data science, blockchain, AI & Machine learning. Cybersecurity is the system of practices, processes, and technologies designed to protect networks, computers, and data. When we talk about Cybersecurity, we primarily speak about information security, network security, and computer security. With the growth and expansion of Blockchain, Data, AI & Machine Learning is the same or increased capacity at which Cybersecurity will need to keep up. By 2020, the demand for AI & Machine Learning professionals surpassed its growth expectancy of over 312%. Artificial Intelligence and Machine Learning are both fields that, in the future, will shape how we interact with the world; and, in turn, how the world interacts with us. However, the AI & ML space is still relatively new and evolving at an uncharted speed. While AI & ML are important, each field has unique requirements and different applications. Upvote · 94 91 Related questions Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? How do I program simple AI software? Can artificial intelligence (AI) learn how to code? If so, why would anyone bother learning programming anymore if an AI can just program itself? What is the best undergraduate double major to pursue a career in AI or machine learning? How does machine learning differ from software engineering? What is required to get into machine learning from software engineering? Can I learn programming and machine learning both at the same time? How does artificial intelligence learn how to code and create programs? Is machine learning a powerful tool for this process? What should I study and focus on, artificial intelligence, software development, or cyber security? In which areas have AI and machine learning technologies been most successful in the software engineering field? Should I learn Machine Learning or Software Engineering? Can I learn machine learning if I don't know coding? Answer 94 Follow Related questions Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? How do I program simple AI software? Advertisement About · Careers · Privacy · Terms · Contact · Languages · Your Ad Choices · Press · © Quora, Inc. 2025",
      "title": "Is AI programming/machine learning easier to code than conventional programming/software engineering? - Quora Something went wrong. Wait a moment and try again. Try again Skip to content Skip to search Sign In Is AI programming/machine learning easier to code than conventional programming/software engineering? All related (34) Sort Recommended Prakash Deivakani Love Genetic Algorithms, Simulated Annealing, Mutation, MCTS · Author has 337 answers and 1.2M answer views · Updated 4y Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural N Continue Reading Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural Networks to solve AI problems which I do not have knowledge about. You can search about that as well if you are interested. Upvote · 91 Sponsored by Amazon Web Services Boost your innovation with AWS Activate. Unlock the potential of generative AI for your startup with AWS credits. Sign Up 92 Related questions More answers below Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? Arun Singh|M.Tech NITB M.Tech in Machine Learning & Mathematics, Maulana Azad National Institute of Technology, Bhopal (Graduated 2020) · 4y If I say only with respect to turning your ideas into code it’s definitely a YES, with all available tools from scikit-learn to Tensorflow you can swiftly turn your thought process into code. It’s not because ML/AI is easier than software engineering it’s mainly because of two reasons : Some brilliant minds have collectively put in efforts to make the coding part lite and this is done primarily because this field is a combination of many different fields put together from the simplest math of numbers, vectors, derivatives, to complex maths like Fast Fourier Transforms, 2nd order partial differe Continue Reading If I say only with respect to turning your ideas into code it’s definitely a YES, with all available tools from scikit-learn to Tensorflow you can swiftly turn your thought process into code. It’s not because ML/AI is easier than software engineering it’s mainly because of two reasons : Some brilliant minds have collectively put in efforts to make the coding part lite and this is done primarily because this field is a combination of many different fields put together from the simplest math of numbers, vectors, derivatives, to complex maths like Fast Fourier Transforms, 2nd order partial differentiation, signal processing, linear algebra, probability, statistics, physics, human biology, etc. etc. And many early contributors and modern people who are contributing to the cutting edge research are from Non-Computer Science background (eg. \"Godfather of Deep Learning\" -Geoffrey Hinton ) and many more to say. Also, if today ML/AI has become everyone's favorite it’s all because of the state of the art and complex software engineering that has gone into it making things look simple at its crust. Upvote · Ranjith S Studied at Sri Krishna College of Engineering and Technology, Tamil Nadu, India (SKCET) (Graduated 2021) · 5y Al is totally different from conventional programming. Probably you can write code using tools and libraries, but that doesn't make any sense. If you are beginner then try code simple AI Technics by your won. That gives you the in depth knowledge of background process, otherwise if you simply follow tools based learning for tiny problems that's simply equal to hello world program. But one point of time if you working on large project at that point of time manual implementation won't work. But there are many fine tune works are there….. Upvote · Mike West Lives in Virginia (2024–present) · Upvoted by Paul McQuesten , PhD Computer Science & Neuroevolution, The University of Texas at Austin (2002)Author has 12.8K answers and 71.1M answer views · Updated 3y Related How much time does it take to become a machine learning engineer? That will depend on the individuals knowledge and skill. If you happen to be a Python programmer with really solid SQL skill then you’ll learning curve is going to be short. Why? Because what most of us do all day is work with SQL and Python. If you know nothing about this space or data then you’re looking at 5–6 years before you’re doing entry level machine learning in the real-world. Look at this job posting below. That first requirement took me years to learn and become comfortable working with in the real-world. I know people on Quora find SQL easy, that is… until the interview… where the fai Continue Reading That will depend on the individuals knowledge and skill. If you happen to be a Python programmer with really solid SQL skill then you’ll learning curve is going to be short. Why? Because what most of us do all day is work with SQL and Python. If you know nothing about this space or data then you’re looking at 5–6 years before you’re doing entry level machine learning in the real-world. Look at this job posting below. That first requirement took me years to learn and become comfortable working with in the real-world. I know people on Quora find SQL easy, that is… until the interview… where the failure rate is around 90%. That’s just one bullet point!! Real-world machine learning is not modeling, it’s data cleansing. If you can’t source and clean your own data then you won’t be working in the real-world. Around 80% of all applied machine learning is data cleansing. I didn’t make this up, this comes from studies and surveys from those in the real-world. There’s a reason why the salaries and packages are big in this space, it’s because the knowledge, skills and experience are big. There is no easy path and most will need to start working in a lesser role, like a data analyst or business analyst in order to make the jump to machine learning. Now, this shouldn’t discourage you. It should help you set some realistic expectations of what’s really required to work in this space. When you’re ready to dig in and learn this platform will get you there. It’s not an easy path and most simply won’t make it. Take it from those in the real-world. Upvote · 999117 91 9938 Sponsored by Avatrade AvaTrade × UAE Pro League – Your Winning Strategy. Great players and smart traders think ahead. Trade with AvaTrade and take control today. Start Now 9945 Related questions More answers below How do I program simple AI software? Can artificial intelligence (AI) learn how to code? If so, why would anyone bother learning programming anymore if an AI can just program itself? What is the best undergraduate double major to pursue a career in AI or machine learning? How does machine learning differ from software engineering? What is required to get into machine learning from software engineering? Can I learn programming and machine learning both at the same time? Ashutosh Singh Software Consultant & Stock Analyst. · Author has 4.5K answers and 3.9M answer views · 5y Yes if you are good in Mathematics. Modern AI is all about your understanding and grip over discrete as well as analytical mathematics. It's about building AI models which are nothing but algebraic equations/functions which satisfy a particular curve. So it's all about polynomials, calculus, statistics, probability and very little of ' if-else-then' type of logic. Upvote · 91 Gongtao Yang Phd of in None of Your Business & Nuclear Warfare, Jialidun University (Graduated 2025) · Author has 145 answers and 320.2K answer views · 5y Related Is AI engineering more difficult than software engineering? The wording is a little bit strange. I’d make it as “Is Engineering portion in AI more difficult than software engineering?” Industrial AI field (academic is not counted in my answer) can be divided into several chuncks in my opinion: Model reaserch & design. This is the part where data scientists gather in a dark room and work their black magic. To a software engineer like me, this is just witchcraft. This is all math and statistics. My understanding is this is highly theoretical. Definitely harder than software engineering. Model training. This is where software engineers comes in. Data scient Continue Reading The wording is a little bit strange. I’d make it as “Is Engineering portion in AI more difficult than software engineering?” Industrial AI field (academic is not counted in my answer) can be divided into several chuncks in my opinion: Model reaserch & design. This is the part where data scientists gather in a dark room and work their black magic. To a software engineer like me, this is just witchcraft. This is all math and statistics. My understanding is this is highly theoretical. Definitely harder than software engineering. Model training. This is where software engineers comes in. Data scientists can design a beautiful AI model, but it will need training data to be fine tuned. The infrastructure requirement can be quiet high in some cases. A model might need a large quantity of data, and there are usually lots of model training going on at the same time. This is just average software engineering. It’s just another high volumn highly scallable project (*shrug). The specs can be different, for example, in stead of traditional SQL DB, HDFS or NoSQL is used. Different specs, but nothing super special. Model Serving. This is the fun part. This is the part where we present our AI overlord to the world. When a model is trained and considered capable of serving real traffic, the model will be put into production. Usually at this point, this model is just a black box. The system feed data to the model and expect an answer from it. Software engineers just need to convert the data into acceptable format and covert the output into useful info for other parts of the system. AI is just another module, and that’s that. In my experience, AI usually is NOT the hardest part of the project. Upvote · 98 Promoted by Bayut Bayut UAE Lives in Dubai, United Arab Emirates · Feb 12 What are the top 5 reasons to invest in an off-plan property in Dubai? Top 5 Reasons to Invest in Off-Plan Property in Dubai Are you looking to maximise your capital gains? Investing in off‐plan properties in Dubai is widely regarded as an excellent opportunity for first‐time buyers and seasoned investors. This investment offers a chance to capitalise on lucrative development projects that promise substantial capital gains due to the high demand for rental and properties for sale in the emirate. Here are the top 5 reasons to invest in off‐plan properties in Dubai. Attractive Pricing with Flexible Payment Plans One of the biggest advantages of off-plan property in Continue Reading Top 5 Reasons to Invest in Off-Plan Property in Dubai Are you looking to maximise your capital gains? Investing in off‐plan properties in Dubai is widely regarded as an excellent opportunity for first‐time buyers and seasoned investors. This investment offers a chance to capitalise on lucrative development projects that promise substantial capital gains due to the high demand for rental and properties for sale in the emirate. Here are the top 5 reasons to invest in off‐plan properties in Dubai. Attractive Pricing with Flexible Payment Plans One of the biggest advantages of off-plan property in Dubai is that they are available at a lower entry price than completed properties. Developers often incentivise early buyers with competitive pricing and staggered payment schemes. It indicates that you only pay a fraction upfront and the balance over the construction period. This financial flexibility not only eases cash flow but improves your overall return as real estate market value rises over time. High Potential for Capital Appreciation When you consider off-plan property investment opportunities in Dubai, keep in mind that as the construction progresses, the property value tends to appreciate. Dubai’s property market is known for its rapid growth and dynamic demand, so purchasing at an early stage can translate into significant capital gains by the time the development is completed. It's a surefire way to get high-rental yield in Dubai from your investments. Binghatti Hills is one of the most prominent off-plan projects in Dubai (Image Credit: Binghatti Developers Official Website) Customisation and Style the Property Your Way Another benefit of investment in pre-construction properties in Dubai is that you have a chance to decorate and style the apartment, villa or townhouse according to your preferences and style. Many off-plan developers in Dubai allow buyers to choose certain design elements or upgrade materials, thereby creating a home that not only suits your tastes but may also command a premium value later on. Buyer Protection under Strong Regulatory Framework Dubai has introduced strict regulations through the Real Estate Regulatory Agency (RERA) to protect buyers. These rules require developers to securely hold buyer funds in escrow accounts and comply with rigorous construction and delivery standards. This strong legal framework reduces the risks linked to off-plan investments, offering investors greater peace of mind. Diverse and Future-Ready Developments The off‐plan property market in Dubai offers a wide range of property types, from apartments to villas for sale, often located in emerging areas that are set to benefit from significant infrastructural and community developments. This diversity enables you to choose a property that aligns with your lifestyle and investment goals. Image credit: Oasis by Emaar Most Popular Areas with Off-Plan Property Investment in Dubai As per the latest Annual Dubai Off-Plan Property Report 2024, off-plan apartments for sale in Dubai were in demand throughout the previous year. Top Areas with Off-Plan Flats for Sale in Dubai The trends analysis indicates that the majority of transactions involving off-plan apartments in Dubai were conducted in the following neighbourhoods: Jumeirah Village Circle (JVC) – Area & Community Guide » Bayut™ Jumeirah Village Circle (JVC) area guide from Bayut™: ✓Amenities ✓Rental & For Sale Properties ✓Market Overview ✓Schools https://www.bayut.com/area-guides/jumeirah-village-circle/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubai Business Bay Dubai Hills Estate Sobha Hartland 2 Meydan City Top Areas with Off-Plan Villas for Sale in Dubai Investors were keen on investing in larger properties and as per the latest report, here are the most popular areas with off-plan villas for sale in Dubai: The Valley by Emaar Dubailand Area Guide | Bayut Dubailand is an area that is split into many different communities, each with their own amenities. The area displays many different entertainment, leisure and residential aspects for residents to enjoy. In this area guide, we discuss this vibrant community developed by Dubai Properties. https://www.bayut.com/area-guides/dubailand/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubaiDubai South – Area, Neighbourhood & Lifestyle Guide » Bayut™ Dubai South area, home to the Al Maktoum International Airport. Read this guide by Bayut to learn more about location and amenities. https://www.bayut.com/area-guides/dubai-south/?utm_source=paid_quora&utm_medium=social&utm_campaign=invest-off-plan-property-dubai Dubai Investment Park (DIP) Athlon by ALDAR The combination of competitive pricing, the promise of rising values, customisation potential, strong regulatory safeguards, and the availability of a wide array of projects makes off‐plan property investment in Dubai particularly appealing. For more details on multiple property types for sale and rent download the Bayut app available on Play Store and App Store. Upvote · 94 Haocheng Lin MSc in AI for Sustainable Development, University College London (UCL) (Graduated 2024) · Author has 410 answers and 1.7M answer views · 1y Related How does machine learning differ from traditional programming methods? Figure 1: A flow diagram comparing traditional programming with machine learning. Machine learning distinctly approaches problems compared to traditional programming methods. In conventional programming, programmers create algorithms and data structures to guide the program step-by-step towards generating an output. On the other hand, machine learning applies datasets to enable the program to learn patterns. One of the vital advantages of machine learning over traditional programming methods is its flexibility and adaptability to new datasets. Conventional programming is well-suited for clearly Continue Reading Figure 1: A flow diagram comparing traditional programming with machine learning. Machine learning distinctly approaches problems compared to traditional programming methods. In conventional programming, programmers create algorithms and data structures to guide the program step-by-step towards generating an output. On the other hand, machine learning applies datasets to enable the program to learn patterns. One of the vital advantages of machine learning over traditional programming methods is its flexibility and adaptability to new datasets. Conventional programming is well-suited for clearly defined problems, such as: Arithmetic operations Determining the number of prime elements in a list Web development Scientific Research Mobile Game Development However, machine learning shines when there are no explicit rules for the algorithm: Facial recognition Natural language processing Recommendation Systems Self-driving cars Disease diagnosis Figure 2: An image highlighting the different areas where machine learning is applied. When it comes to programming, traditional methods make debugging easier than machine learning, which can be viewed as a \"black box\" operation. However, developers may improve machine learning models by adjusting datasets or choosing different models. With traditional programming, debugging enables developers to fix errors as they occur during the debugging process. In situations where clear rules are not easily accessible, machine learning provides a distinct and effective solution to problem-solving. Its flexibility and ability to enhance through data manipulation make it a valuable resource in multiple areas, such as facial recognition and language processing. Upvote · 9914 91 91 David Johnston Principal Data Scientist at ThoughtWorks · Author has 424 answers and 1.9M answer views · 5y Related Is AI engineering more difficult than software engineering? AI engineering is also software engineering. But Yes and No. The promise of AI (ML, data science whatever you call it) is that you can use a model instead of a large set of hand written rules. Let’s discuss why that can be a good thing. Data science is an approach to dealing with data processing and computing in the presence of uncertainty. This is where it shines. If the data is a perfect representation of reality and the problem can be done by doing a straightforward computation then data science or model based approaches are not recommended. Just follow the simple set of rules and regular so Continue Reading AI engineering is also software engineering. But Yes and No. The promise of AI (ML, data science whatever you call it) is that you can use a model instead of a large set of hand written rules. Let’s discuss why that can be a good thing. Data science is an approach to dealing with data processing and computing in the presence of uncertainty. This is where it shines. If the data is a perfect representation of reality and the problem can be done by doing a straightforward computation then data science or model based approaches are not recommended. Just follow the simple set of rules and regular software delivery approaches. But often there are cases where the data is only a fuzzy representation of the things in the world being modeled. For example, your phone reports your location, but it’s not always correct. Your list of restaurants has a “food category” flag, but not every restaurants really fits into your set of categories and some are just wrong. The closing times are only approximate. Some are duplicated. Some are missing. This is the reality you face when you are trying to recommend which restaurant someone should go to. When you follow the typical approach to solving this, you start by assuming the data is a correct representation of reality. Then the problem is pretty easy. Just use a few rules. Search in a radius from the current location for the restaurant categories you specify. Then you start dealing with the long list of “edge cases”. What if the location is wrong? Can you detect that and update the value or at least alert the user? How do we classify Sri Lankan food? Maybe allow restaurants to have more than one category? Asian and also Indian? What if the restaurant is close as the crow flies but is actually on an Island whose ferry runs only every hour until midnight? How can I detect if a restaurant is actually out of business? All of these details end up requiring a long list of rules. And worse, those rules sometimes interact with each other and make it very difficult to test all of the scenarios. Too many combinations. The point is that you started with what seemed like a simple task but the poor fidelity of the data to the things in the real world ended up making it very complicated and hard to develop, test and maintain. Enter the model based approach. What if we just choose not to worry about all the details of what can go wrong and make the assumption that people usually figure out good places to go eventually? Our problem is not so much about helping them choose the right place. It’s about helping them making that choice quicker. As times goes on, we actually gather an enormous amount of data. We can see for example that people in Time Square who type in “Gourmet Pizza” at 2am on weekdays usually end up going to Gina’s Trattoria. That is, we learn what to recommend without having to deal with the reasons for the recommendation. Even if Gina’s Trattoria is classified as “Mediterranean” not “Pizza”, we correctly send people there who type “Pizza”. Figuring out where people go rather than why they go there is much easier. In fact, it can be easily represented with a model whose parameters can be trained from data. The data can change without having to have to change the software. You can rerun the training on more recent data to get an updated model. With this approach there is a far smaller set of rules to maintain. It’s an approach which is tolerant to “bad data”. The data, in fact, need not have any relation to known things in world. It simply needs to correlate with the target variable to be useful. So this way of solving problems can result in overall simpler software than the standard approach of explicitly writing rules to deal with every scenario. On the other hand, it can also be more difficult. In reality it’s just different. But as alluded to above, it’s not always the best approach. If a rules based approach can handle all the edge cases without too much complexity it is often the preferred approach. One advantage at least is that when it gives a bad result, you can consider that a bug and go see why it happened and maybe fix it. With the model based approach you are conceding the fact that the predicting is not always going to be good. You are going to quantify how often it is good and try to let the model adjust to maximize that as best it can. But that means that a bad result is not really to be considered a bug. It can be very hard to see why it had a bad result. The model is targeting averages not individual cases. But this makes finding and fixing problems by tracing individual cases not effective. But the customer is not an average. The customer is an individual case. When they have a complaint about their case they want it fixed. But the model based approach gives you little ability to do that. Developers can often have a lot of trouble translating their usual methodology to these kinds of applications. The applications can seem mysterious. And they will sometimes feel that this approach is in fact harder. So that’s a long way of saying Yes and No and so nothing definitive. It really depends. But I hope this helps clarify the reasons why it could go either way. If you understand these reasons you can choose the right approach so that your solution seems like the easier way to you. Upvote · 9919 92 92 Sponsored by appfast Increase your App installs and Reviews. We customize the suitable keyword strategy for your app to boost rankings. Learn More Mike West Lives in Virginia (2024–present) · Upvoted by Sunny Manio , PhD Computer Science (2020)Author has 12.8K answers and 71.1M answer views · 4y Related Do you need to master a programming language first before starting with AI and machine learning? Master… nope. Have a solid foundation… yep. If you don’t have a solid foundation in Python and SQL you’ll never get a job in the applied space as a machine learning engineer. Almost every job post within this space will have two core themes. Python and SQL. Imagine paying someone 150K or more who can’t source or wrangle their own data? You’d be laughed out of most IT shops. Without SQL and Python skills your other skills are worthless… I promise. Upvote · 9935 94 Zeeshan Zia PhD in Computer Vision and Machine Learning · Upvoted by Jukka Toivanen , PhD Computer Science, University of Helsinki and Shivendra Panicker , Masters of Science Computer Science, New York University (2018)Author has 1K answers and 6.2M answer views · Updated 7y Related Is machine learning more complex than software engineering? Is there any design or creativity involved in ML as in software engineering? The central premise of machine learning is that you should be able to learn algorithms from data. People had been trying to write algorithms to recognize general objects in images for four to five decades. Smart people. PhDs from MIT and the like! Yet, they couldn’t figure it out*. Along came machine learning algorithms, or let’s call them “meta-programs”; and they were able to “generate” programs (machine learning models) that robustly detect objects! Multiply this phenomenon across many different fields, over the past decade or two. Andrew Ng has a fantastic rule of thumb, that any (intellectual Continue Reading The central premise of machine learning is that you should be able to learn algorithms from data. People had been trying to write algorithms to recognize general objects in images for four to five decades. Smart people. PhDs from MIT and the like! Yet, they couldn’t figure it out*. Along came machine learning algorithms, or let’s call them “meta-programs”; and they were able to “generate” programs (machine learning models) that robustly detect objects! Multiply this phenomenon across many different fields, over the past decade or two. Andrew Ng has a fantastic rule of thumb, that any (intellectual) task that humans can perform in less than a second, is likely better dealt with using machine learning; whereas tasks which humans take more than a second to perform are probably more suited for explicit hand-crafted software systems. Applied ML is unlike software engineering or math. Even if you understand the meta-algorithm e.g. convolutional neural networks or SVM or Random Forests perfectly well; there is no guarantee that you’ll be able to train them for a given task. You need an entirely separate set of skills to do productive work with ML tools, than the skills you need to leverage a programming language, or the skills you need to mathematically model a problem. One such skill is the capability to come up with good ideas to debug an ML model: what kind of intermediate results can you visualize? can you invent metrics to figure out what’s going wrong? Your evaluation also needs to be a lot more data-driven in ML, than the typical software engineer or mathematician’s mindset. Most expert software devs I know, keep jumping from one ML model/pipeline to another, when the first one doesn’t work. Most mathematicians I know, keep endlessly trying to model the problem making their model more and more complex (and failing, like the object recognition folks did). So it’s an entirely different skillset. One that’s not appreciated or understood well enough by industry today. An attempt at comparison would be like comparing apples to oranges though! *The first PhD on the topic at MIT was awarded in 1964; and the first practically relevant “production quality” systems came out in early 2000s. Upvote · 999219 9912 98 Naitik Chandak Spent 5+ years in Machine learning · Author has 375 answers and 1.2M answer views · 5y Related Is machine learning completely different from software engineering? No, Machine Learning is not completely different from Software Engineering. But We can say that Machine learning is also a part of Software Engineering. Software Engineering is a very broad term which includes all the types of product development. Machine learning is concepts derived from Artificial Intelligence. A different set of algorithms we can implement in software engineering (product development) to make it more smart and intelligent, so it can be capable enough to predict the results based on the provided training data set. If you wondering, to differentiate Software Engineering and Mac Continue Reading No, Machine Learning is not completely different from Software Engineering. But We can say that Machine learning is also a part of Software Engineering. Software Engineering is a very broad term which includes all the types of product development. Machine learning is concepts derived from Artificial Intelligence. A different set of algorithms we can implement in software engineering (product development) to make it more smart and intelligent, so it can be capable enough to predict the results based on the provided training data set. If you wondering, to differentiate Software Engineering and Machine Learning, You can consider as, Software Engineering is the top level of everything including Data Science, AI, Machine Learning, Big data, Computer Vision, Cognitive Computing. All the keywords mentioned over here are just part of Software Engineering. If you are considering Software Engineering just by the Software Development Life Cycle (SDLC) then also, It has a number of models like Waterfall, Agile, Scrum, Iterative, Spiral, etc. Whereas in Machine learning we have a different set of algorithms such as Naive-Bayes, Gaussian, Taylor, Regression, Classification, etc. Don’t get confused between Software Engineering and Software Development Life Cycle, with Machine Learning. Hope this helps. Let me know if you have any query regarding the same. Upvote · 97 Andrew James Senior Product Manager at Oracle · Updated 3y Related Should I go for software development or Machine learning or Android development, considering the job perspective? Its funny you ask that question. I still remember my colleagues and juniors asked me the same. It's not which field is good. Its about how good you are at that (any) field. Every field is unique. I have seen people enjoying their work in BPO (earning lot of money) and I have seen people finding their lives miserable at Google (Development). The following question has been asked to me once: “ What are the skills you need to succeed as a professional in the digital future ?” And here's what I have replied, “As long as people have Cognitive Ability and willing to empty their hearts to learn somethi Continue Reading Its funny you ask that question. I still remember my colleagues and juniors asked me the same. It's not which field is good. Its about how good you are at that (any) field. Every field is unique. I have seen people enjoying their work in BPO (earning lot of money) and I have seen people finding their lives miserable at Google (Development). The following question has been asked to me once: “ What are the skills you need to succeed as a professional in the digital future ?” And here's what I have replied, “As long as people have Cognitive Ability and willing to empty their hearts to learn something new, they can always survive.” Isn't that true? Choose a field. Keep learning. Master it. Put your thoughts and creativity. Innovate. Forget about the money and do the job passionately. You will find yourself moving higher in your life. Even in the storm, you cannot be a normal bird that runs and hide in the nest. You should be an eagle who enjoys the storm and rise above it. Good luck. Upvote · 999180 94 91 Theresa Renee Studied Computer Science & Web Design (Graduated 2005) · 2y Related Should I continue software engineering or learn AI & machine learning? Which is the future? Ultimately, the choice is yours. If by Software Engineering you are referring to programming or coding, within time, AI will phase out the majority of programmers, coders, and data analysts. This process will first disrupt the industry just as video streaming services replaced cable television and brick & mortar video stores; software programs replaced Accountants; rideshare drivers replaced taxis. I often share a proverbial or two with my students about life, business, and Tech. \"To thrive is to innovate. To survive is to think ahead of the curve. Do neither and get left behind.\" another is, Continue Reading Ultimately, the choice is yours. If by Software Engineering you are referring to programming or coding, within time, AI will phase out the majority of programmers, coders, and data analysts. This process will first disrupt the industry just as video streaming services replaced cable television and brick & mortar video stores; software programs replaced Accountants; rideshare drivers replaced taxis. I often share a proverbial or two with my students about life, business, and Tech. \"To thrive is to innovate. To survive is to think ahead of the curve. Do neither and get left behind.\" another is, \"While not every assumption comes to fruition, it is best to be prepared rather than deny it.\" Furthermore, while AI & Machine Learning are intriguing domains of Software Engineering, many fields in computing have seen a rapid increase in demand since 2018; Blockchain is one among them. With the rampant progression of AI & Machine Learning, Cybersecurity is critical. Moreover, Blockchain and Artificial Intelligence (AI) are merging. Therefore, Cybersecurity and blockchain are inextricably related. Cybersecurity is becoming increasingly crucial to developing AI and machine learning (ML). Such as, increased data usage brings greater security risks, privacy concerns, and data misuse. As a result, cyber-attacks have become a significant concern for organizations that rely on AI and ML. Additionally, Cybersecurity has a substantial impact on data science, blockchain, AI & Machine learning. Cybersecurity is the system of practices, processes, and technologies designed to protect networks, computers, and data. When we talk about Cybersecurity, we primarily speak about information security, network security, and computer security. With the growth and expansion of Blockchain, Data, AI & Machine Learning is the same or increased capacity at which Cybersecurity will need to keep up. By 2020, the demand for AI & Machine Learning professionals surpassed its growth expectancy of over 312%. Artificial Intelligence and Machine Learning are both fields that, in the future, will shape how we interact with the world; and, in turn, how the world interacts with us. However, the AI & ML space is still relatively new and evolving at an uncharted speed. While AI & ML are important, each field has unique requirements and different applications. Upvote · 94 91 Related questions Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? How do I program simple AI software? Can artificial intelligence (AI) learn how to code? If so, why would anyone bother learning programming anymore if an AI can just program itself? What is the best undergraduate double major to pursue a career in AI or machine learning? How does machine learning differ from software engineering? What is required to get into machine learning from software engineering? Can I learn programming and machine learning both at the same time? How does artificial intelligence learn how to code and create programs? Is machine learning a powerful tool for this process? What should I study and focus on, artificial intelligence, software development, or cyber security? In which areas have AI and machine learning technologies been most successful in the software engineering field? Should I learn Machine Learning or Software Engineering? Can I learn machine learning if I don't know coding? Answer 94 Follow Related questions Do I need to learn code to pursue a career in AI and Machine Learning? How good is AI at programming? Is AI engineering more difficult than software engineering? What do I need to learn about AI and Machine Learning as a software engineer? What is the relationship between software engineering and artificial intelligence/machine learning/computer science in general (if any)? How do I program simple AI software? Advertisement About · Careers · Privacy · Terms · Contact · Languages · Your Ad Choices · Press · © Quora, Inc. 2025"
    },
    {
      "url": "https://medium.com/@fahimulhaq/how-to-learn-to-code-with-ai-in-2024-08138e7f7f40",
      "content": "How to learn to code with AI in 2024 | by Fahim ul Haq | Medium Open in app Sign up Sign in Write Sign up Sign in How to learn to code with AI in 2024 Fahim ul Haq ·Follow 7 min read · May 21, 2024 -- 1 Listen Share This blog was originally published on Substack. Subscribe to ‘Letters to New Coders’ to receive free weekly posts. My daughter just turned 12 and will learn to drive in a few years. When I picture her getting behind the wheel, I can’t help but think about how different her experience will be from mine. When I got my US driver’s license in 2006, I didn’t even have a back-up camera, let alone automatic parking. I certainly never imagined that semi-autonomous cars would be widely available in the next decade. Given the rapid advancements in self-driving technology, I’m curious how driver education might evolve. Will my daughter use AI features while learning how to drive? Will she be able to invoke AI features during the driving test? I don’t have answers to all these questions. However, I’m confident that driving tests will disallow AI features for the foreseeable future. If Tesla has taught us anything, it’s that even the most advanced driving technology needs supervision from well-trained drivers. Learning to code in this new era bears a lot of similarities. AI tools can enhance a programmer’s work, but they can’t solve most complex problems unassisted. Without strong programmers at the wheel, AI can easily drive us off-course. There simply is no substitute for internalizing the basics. Now more than ever, you need strong programming fundamentals to make the most of AI. But will your coding journey look the same today as it would have a few years ago? Today, we’ll explore learning to code with AI in two different ways: How to equip yourself to be a successful coder in the AI era. How to leverage AI to learn to code more efficiently. Let’s get started! How to be a successful coder in the AI era Imagine a world where AI provides many snippets of code as you build software. You review each line to ensure correctness and alignment with your coding style and guidelines. Through a combination of AI-generated and original code, you’re able to build great programs efficiently. This is the near-future of software development. Notice that AI isn’t replacing your role as a programmer; it’s reducing grunt work. Without a deep understanding of what AI is doing, you run the risk of introducing errors and vulnerabilities into your code. It’s like when I discovered that you could build IKEA furniture with a drill instead of an Allen key. This innovation has saved me tons of elbow grease, but I still need a deft hand to ensure my KALLAX shelving unit doesn’t collapse from improper assembly. At the end of the day, I control the machine. So, does AI change what you need in order to become a professional developer? Yes, somewhat! You’ll need to learn how to incorporate AI into your workflow to be more productive. (As a developer, I’m thankful for this because it means less time completing small, tedious tasks, and more time solving interesting problems.) However, AI shouldn’t change how you learn to code, at least at the beginning. Just as you learn math fundamentals before using calculators, your first few months learning how to code will focus on learning coding fundamentals, including how to think like a programmer. Many months down the road, you can think about incorporating Machine Learning and AI topics into your curriculum — but don’t get ahead of yourself! You’ll never reach that point if you skip the fundamentals. How to leverage AI in the learning process Many professional developers use AI assistants like ChatGPT and GitHub Copilot to write code more efficiently. Naturally, you may be wondering if AI tools can accelerate your learning process. Well, yes and no. AI assistants have some amazing capabilities. However, I don’t recommend using them heavily in your first few months of learning to code. Let’s discuss why — and explore some new AI tools specifically designed for learning. Learning with ChatGPT and GitHub Copilot As you learn to code, it’s easy to become overwhelmed by all the new terms and concepts you’re encountering. Having an AI assistant for quick, direct answers to questions like “What is a data structure?” can save you time scouring forums for relevant information. AI assistants can also help unblock you and debug your code. Let’s say you can’t remember how to nest an object. With the right prompting, ChatGPT or Copilot can spit out code that meets your requirements. You can then analyze the output to learn how objects are nested in that particular context. Or, if you write code independently, you can have your AI assistant check for errors, then use that feedback to refine your skills. This all sounds pretty great. So why not use AI assistants as a new coder? To unlock the full benefits of ChatGPT, Copilot, or similar tools, you need the programming skills to do the following: Write effective prompts. Fact-check outputs. Beyond asking simple questions like, “What is a data structure?”, new coders don’t have the experience to provide guidance that generates useful AI outputs. There are entire courses dedicated to this topic (called “prompt engineering”), which I only recommend once you’ve mastered programming basics. No matter what you ask AI assistants, it’s crucial to receive their answers with healthy skepticism. That’s because Generative AI can “hallucinate,” or generate inaccurate responses with a tone of authority. The technology doesn’t truly understand the content it generates; it’s simply creating responses based on patterns perceived in its training data, which is often outdated. AI is improving all the time. However, even a small chance of hallucination is risky. I doubt you’d feel comfortable dumping all your symptoms into ChatGPT and accepting an AI prescription. Personally, I’d want a human with medical training to sign off on it. The problem is, new coders don’t yet have the knowledge to validate AI responses. This makes you highly susceptible to false information. AI assistants are more useful once you have strong programming foundations — and you can’t rely on untrustworthy information to get there. AI-powered tools for learners AI assistants like ChatGPT and GitHub Copilot aren’t ideal for learning to code. So what’s the alternative? For years, self-taught coders relied on books and videos to learn programming fundamentals. These can still be good options, as many of them contain high-quality content. However, traditional learning resources can’t provide you with a personalized learning experience. Thankfully, AI-powered learning tools are providing new coders with a better option. For example, platforms like Educative take the university-quality content of traditional learning resources and enhance it with AI. Here’s how it works. As you progress through an online course, AI periodically assesses your knowledge and learning goals. From there, it adapts the curriculum to meet your needs in real time. This is highly valuable for self-taught coders, who often lose steam without a structured plan to guide their learning. Instead of researching what lesson to try next, all you have to do is focus on learning and stick to the path laid out for you. AI also creates a more personalized, engaging experience within each lesson. When you start programming, you can write and run all your code in-browser. AI provides tailored feedback on your code, so you can make improvements and continue practicing within the course environment. Need clarification on a concept? Instead of opening a new tab to ask Google or ChatGPT, you can highlight text within the course and receive an instant explanation. Between adaptive learning, personalized code feedback, and instant explainers, AI-powered learning provides many benefits of an AI assistant — with the crucial addition of quality control. You can benefit from a personalized experience without worrying that false information will lead you astray. Get started today Overall, learning to code with AI looks a lot like learning to code without AI. As a new coder, the best thing you can do for your future career is commit to learning the basics. With all the buzz around AI, it can be tempting to jump to AI skills — but this will hurt your progress if you haven’t mastered programming fundamentals. Think of it this way: you can’t properly advise an AI tool on how to solve problems if you don’t have relevant experience yourself. Plus, these tools are far from perfect, so you’ll need the right expertise to edit AI-generated code. By the time you’re ready to interview, you’ll want to show employers that you’re AI-ready. This doesn’t mean that you’re prepared to work on AI models right away. Rather, you’re a strong coder and problem-solver with a demonstrated willingness to learn how to leverage AI. So if you’re ready to learn how to code in 2024, don’t let the AI hype derail your journey. Choose a guided learning plan like Educative’s Learn to Code: Become a Software Engineer — and start building your coding foundation. While you can’t skip the hard work of learning the basics, you can choose AI-powered courses that help you learn the basics faster. Unlike AI assistants like ChatGPT and Copilot, AI-powered learning is designed to support new coders. You’ll get a highly personalized experience that accelerates learning, with the quality content of a university course. As long as you stick to the learning plan and remain curious about AI, you’ll be right on track to become “AI ready” in 2024. Sign up to discover human stories that deepen your understanding of the world. Free Distraction-free reading. No ads. Organize your knowledge with lists and highlights. Tell your story. Find your audience. Sign up for free Membership Read member-only stories Support writers you read most Earn money for your writing Listen to audio narrations Read offline with the Medium app Try for $5/month -- -- 1 Follow Written by Fahim ul Haq ----------------------- 11.2K Followers ·530 Following Co-founder at Educative.io. Creating hands-on courses for Software Engineers & Engineering Enablement solutions for dev teams. Previously: Facebook, Microsoft. Follow Responses (1) What are your thoughts? Also publish to my profile Respond Respond See all responses Help Status About Careers Press Blog Privacy Terms Text to speech Teams",
      "title": "How to learn to code with AI in 2024 | by Fahim ul Haq | Medium Open in app Sign up Sign in Write Sign up Sign in How to learn to code with AI in 2024 Fahim ul Haq ·Follow 7 min read · May 21, 2024 -- 1 Listen Share This blog was originally published on Substack. Subscribe to ‘Letters to New Coders’ to receive free weekly posts. My daughter just turned 12 and will learn to drive in a few years. When I picture her getting behind the wheel, I can’t help but think about how different her experience will be from mine. When I got my US driver’s license in 2006, I didn’t even have a back-up camera, let alone automatic parking. I certainly never imagined that semi-autonomous cars would be widely available in the next decade. Given the rapid advancements in self-driving technology, I’m curious how driver education might evolve. Will my daughter use AI features while learning how to drive? Will she be able to invoke AI features during the driving test? I don’t have answers to all these questions. However, I’m confident that driving tests will disallow AI features for the foreseeable future. If Tesla has taught us anything, it’s that even the most advanced driving technology needs supervision from well-trained drivers. Learning to code in this new era bears a lot of similarities. AI tools can enhance a programmer’s work, but they can’t solve most complex problems unassisted. Without strong programmers at the wheel, AI can easily drive us off-course. There simply is no substitute for internalizing the basics. Now more than ever, you need strong programming fundamentals to make the most of AI. But will your coding journey look the same today as it would have a few years ago? Today, we’ll explore learning to code with AI in two different ways: How to equip yourself to be a successful coder in the AI era. How to leverage AI to learn to code more efficiently. Let’s get started! How to be a successful coder in the AI era Imagine a world where AI provides many snippets of code as you build software. You review each line to ensure correctness and alignment with your coding style and guidelines. Through a combination of AI-generated and original code, you’re able to build great programs efficiently. This is the near-future of software development. Notice that AI isn’t replacing your role as a programmer; it’s reducing grunt work. Without a deep understanding of what AI is doing, you run the risk of introducing errors and vulnerabilities into your code. It’s like when I discovered that you could build IKEA furniture with a drill instead of an Allen key. This innovation has saved me tons of elbow grease, but I still need a deft hand to ensure my KALLAX shelving unit doesn’t collapse from improper assembly. At the end of the day, I control the machine. So, does AI change what you need in order to become a professional developer? Yes, somewhat! You’ll need to learn how to incorporate AI into your workflow to be more productive. (As a developer, I’m thankful for this because it means less time completing small, tedious tasks, and more time solving interesting problems.) However, AI shouldn’t change how you learn to code, at least at the beginning. Just as you learn math fundamentals before using calculators, your first few months learning how to code will focus on learning coding fundamentals, including how to think like a programmer. Many months down the road, you can think about incorporating Machine Learning and AI topics into your curriculum — but don’t get ahead of yourself! You’ll never reach that point if you skip the fundamentals. How to leverage AI in the learning process Many professional developers use AI assistants like ChatGPT and GitHub Copilot to write code more efficiently. Naturally, you may be wondering if AI tools can accelerate your learning process. Well, yes and no. AI assistants have some amazing capabilities. However, I don’t recommend using them heavily in your first few months of learning to code. Let’s discuss why — and explore some new AI tools specifically designed for learning. Learning with ChatGPT and GitHub Copilot As you learn to code, it’s easy to become overwhelmed by all the new terms and concepts you’re encountering. Having an AI assistant for quick, direct answers to questions like “What is a data structure?” can save you time scouring forums for relevant information. AI assistants can also help unblock you and debug your code. Let’s say you can’t remember how to nest an object. With the right prompting, ChatGPT or Copilot can spit out code that meets your requirements. You can then analyze the output to learn how objects are nested in that particular context. Or, if you write code independently, you can have your AI assistant check for errors, then use that feedback to refine your skills. This all sounds pretty great. So why not use AI assistants as a new coder? To unlock the full benefits of ChatGPT, Copilot, or similar tools, you need the programming skills to do the following: Write effective prompts. Fact-check outputs. Beyond asking simple questions like, “What is a data structure?”, new coders don’t have the experience to provide guidance that generates useful AI outputs. There are entire courses dedicated to this topic (called “prompt engineering”), which I only recommend once you’ve mastered programming basics. No matter what you ask AI assistants, it’s crucial to receive their answers with healthy skepticism. That’s because Generative AI can “hallucinate,” or generate inaccurate responses with a tone of authority. The technology doesn’t truly understand the content it generates; it’s simply creating responses based on patterns perceived in its training data, which is often outdated. AI is improving all the time. However, even a small chance of hallucination is risky. I doubt you’d feel comfortable dumping all your symptoms into ChatGPT and accepting an AI prescription. Personally, I’d want a human with medical training to sign off on it. The problem is, new coders don’t yet have the knowledge to validate AI responses. This makes you highly susceptible to false information. AI assistants are more useful once you have strong programming foundations — and you can’t rely on untrustworthy information to get there. AI-powered tools for learners AI assistants like ChatGPT and GitHub Copilot aren’t ideal for learning to code. So what’s the alternative? For years, self-taught coders relied on books and videos to learn programming fundamentals. These can still be good options, as many of them contain high-quality content. However, traditional learning resources can’t provide you with a personalized learning experience. Thankfully, AI-powered learning tools are providing new coders with a better option. For example, platforms like Educative take the university-quality content of traditional learning resources and enhance it with AI. Here’s how it works. As you progress through an online course, AI periodically assesses your knowledge and learning goals. From there, it adapts the curriculum to meet your needs in real time. This is highly valuable for self-taught coders, who often lose steam without a structured plan to guide their learning. Instead of researching what lesson to try next, all you have to do is focus on learning and stick to the path laid out for you. AI also creates a more personalized, engaging experience within each lesson. When you start programming, you can write and run all your code in-browser. AI provides tailored feedback on your code, so you can make improvements and continue practicing within the course environment. Need clarification on a concept? Instead of opening a new tab to ask Google or ChatGPT, you can highlight text within the course and receive an instant explanation. Between adaptive learning, personalized code feedback, and instant explainers, AI-powered learning provides many benefits of an AI assistant — with the crucial addition of quality control. You can benefit from a personalized experience without worrying that false information will lead you astray. Get started today Overall, learning to code with AI looks a lot like learning to code without AI. As a new coder, the best thing you can do for your future career is commit to learning the basics. With all the buzz around AI, it can be tempting to jump to AI skills — but this will hurt your progress if you haven’t mastered programming fundamentals. Think of it this way: you can’t properly advise an AI tool on how to solve problems if you don’t have relevant experience yourself. Plus, these tools are far from perfect, so you’ll need the right expertise to edit AI-generated code. By the time you’re ready to interview, you’ll want to show employers that you’re AI-ready. This doesn’t mean that you’re prepared to work on AI models right away. Rather, you’re a strong coder and problem-solver with a demonstrated willingness to learn how to leverage AI. So if you’re ready to learn how to code in 2024, don’t let the AI hype derail your journey. Choose a guided learning plan like Educative’s Learn to Code: Become a Software Engineer — and start building your coding foundation. While you can’t skip the hard work of learning the basics, you can choose AI-powered courses that help you learn the basics faster. Unlike AI assistants like ChatGPT and Copilot, AI-powered learning is designed to support new coders. You’ll get a highly personalized experience that accelerates learning, with the quality content of a university course. As long as you stick to the learning plan and remain curious about AI, you’ll be right on track to become “AI ready” in 2024. Sign up to discover human stories that deepen your understanding of the world. Free Distraction-free reading. No ads. Organize your knowledge with lists and highlights. Tell your story. Find your audience. Sign up for free Membership Read member-only stories Support writers you read most Earn money for your writing Listen to audio narrations Read offline with the Medium app Try for $5/month -- -- 1 Follow Written by Fahim ul Haq ----------------------- 11.2K Followers ·530 Following Co-founder at Educative.io. Creating hands-on courses for Software Engineers & Engineering Enablement solutions for dev teams. Previously: Facebook, Microsoft. Follow Responses (1) What are your thoughts? Also publish to my profile Respond Respond See all responses Help Status About Careers Press Blog Privacy Terms Text to speech Teams"
    },
    {
      "url": "https://www.youtube.com/watch?v=KjLg9x0WKkY",
      "content": "How To Learn Coding FAST (using AI) Volo 18200 subscribers 120 likes 3429 views 29 Mar 2024 It's never been easier to learn how to code thanks to AI. I will show you how I would learn to code if I could start over and how I would use ChatGPT to quickly learn coding. I will also show you how AI can write code for you and how you can troubleshoot that code with ChatGPT. Will AI automate coding? Large portions of it, yes - but that will only empower problem solvers like us to add more value and solve bigger problems even more quickly! I believe that the future of Software Engineering lies in guiding AI Agents to build software for us and this hands-on tutorial will show you what that future might look like. 📚 Resources: - Free Coding Prompt Guide: https://github.com/VoloBuilds/prompts/blob/main/LearnToCode.md 🚀 In This Video, You'll learn: - The best way to learn coding in 2024 - How to use AI to learn to code - How to use AI to write code for you - Best tech stack to learn how to code - Best programming language to start with - Best way to start coding - What projects to focus on when learning how to code - How to troubleshoot code with AI - Prompts to code with ChatGPT - Coding in 2024 - Web Development 2024 💡 Perfect for Viewers Interested in: - Software Development - Future of coding - Learning to code in 2024 - Using AI to code - Coding with AI - Learning about the latest AI tech - Generative AI Subscribe for more tutorials on AI and programming and to stay up to date on the latest AI updates and news!! 💬 Questions or Feedback? Drop your thoughts in the comments below, and I'll be sure to get back to you! #ai #artificialintelligence #coding #futureofwork #codewithai #aicoding #gpts #openai #chatgpt #nvidia #jensenhuang #gpus #programming #software #softwaredev #webdevelopment #webdev Chapters 00:00 - The Basic Approach 01:06 - Best Tech Stack 02:48 - What To Build First? 05:02 - Hands On Learning with ChatGPT 09:30 - Best Way To Code with ChatGPT 11:40 - Modifying Code & Troubleshooting 21 comments hey Chad GPT I'm a brand new web developer and I want you to give me just a really high level but very concise explanation of how a website works sure thing a website functions through a combination of several components interacting with each [Laughter] [Music] other okay can you tell me a little bit more about what role JavaScript plays in all of this JavaScript allows users to interact with web pages in real time this includes anything buttons that high or show more content to forms and an too okay let's say I wanted to write some code how would I actually go about doing that to start writing code especially as a new web developer you'll follow a few straightforward steps here's a simple guide to get you going so just like that you can get started learning how to code without signing up for a 4-year computer science degree and you don't have to spend thousands of dollars on boot camps just to sit through hours of boring lectures and tutorials now I don't have a course to sell you I just want to show you a way that you can use Chad GPT to get started and the right kind of questions to ask to really accelerate your progress by the end of this video you'll have a simple app put together even if you know nothing about coding today so let's go ahead and get started the first thing that you're going to want to do is pick a programming language and a Tex stack that you want to learn and a Tex stack is just a combination of technologies that work together to allow you to build a full application the stack that I recommend is called M it stands for Express react and nodejs and this stack is going to enable you to use JavaScript across the full stack and make it a lot easier to learn new information because you're not going to be switching between different languages also the data is going to be a lot easier to understand because the way that you use it in the code it's going to be the same way that it's represented in the database it's going to be the same way that it's sent to the UI and so it's going to be consistent throughout so you're not going to have to make as many mental switches as you would if you are using a stack with multiple languages also I've heard some people recommend starting with just plain JavaScript HTML and CSS and I actually recommend against that because I think it can actually get confusing and then discouraging once you run into a bunch of issues a lot of the modern Frameworks that we use nowadays such as react were actually designed to resolve a lot of the headaches that you would encounter if you were to just use plain JavaScript HTML and CSS so I would prefer to actually start with a framework and then work backwards if you need to dig into the details on how some of these Technologies work on a lower level but I find that the popular Frameworks are often well written enough where I don't have to actually do that I'm going to get into the specific prompts that you can use and how you can actually develop with AI but first I want to talk about the sort of projects and the sort of things that you should actually focus on building to help you build some real world experience and have some skills that are going to apply to many different projects that you could actually work on the most important thing that you can do is to just get started so go ahead and download vs code right now that's going to be your code editor and then you can ask Chad GPT for instructions on how to use it where you can put the code what the codee is actually going to do and so on once you have VSS code installed and you're comfortable asking Chad GPT for advice you're going to want to think of some practical problems that you want to solve maybe you can start with something super basic to get familiar with how the Technologies work like a hello world sort of app which I'll show you later in the video but after that you're going to want to find a problem that you want to solve and start coding to figure out how to actually solve it one of the reasons that you want to pick a practical problem to solve and ideally something that you're interested in is because it's going to give you a very natural reason to actually learn things and then retain the information that you learn because your mind will see the purpose behind learning something rather than just getting a bunch of information stuffed into it and then just letting it fly out the other ear you will start to see why certain Technologies are necessary and how they fit into the bigger puzzle so for me as a YouTuber one problem that I've encountered is that I don't know what my thumbnails are going to look like on a video before I upload it and so I've been working on this app that's going to help me actually preview what the thumbnails are going to look like amongst a bunch of other YouTube videos one of the things that I wanted to do is make sure that I get the sizing of everything just right so it looks just like the YouTube website so I really had to dig into the details of CSS and understand how certain properties have a different effect on these various elements on the web page by trying to precisely imitate that layout I was able to learn some new CSS properties that I didn't know about before and this was a very natural way for me me to explore that because I was learning something new that I had to learn in order to achieve what I wanted to do so try to think of something that you might actually want to use and try to build it even if the final product is super complicated and doesn't seem realistic for you to build now you're going to be able to start building a lot of skills as you slowly approach that final product okay so let's say you know what you want to create but you still don't know how to code let's head over to Chad GPT and I'll share a bunch of different prompts with you and have Chad GPT write a lot of the code for for you explain it to you and help you actually learn how it works okay so we're going to go to Chad GPT and put in this simple prompt to get started from scratch I'm brand new to coding and I want to use the M Stack to build a basic hello world web app what do I do okay and it gave us a pretty thorough explanation here look it explains what M is so we can use these terms to ask follow-up questions to explain these different components these Technologies work together to enable full stack development it explains what they're used for okay set up your development environment install node.js and npm look at that it gives us a link so we can go here can download node.js so let's say we've done that we can go download mongodb install a code editor Visual Studio code okay let's do that initialize your project create a new directory for your project and navigate into it in your terminal or command prompt okay so let's just ask what that means what is a terminal what is it used for okay terminal also known as a CLI or shell is a text based interface so this is a really thorough explanation it might make me feel overwhelmed so I'm just going to ask can you explain that in a few simple sentences with an example okay that's much better a terminal is like a special window on your computer where you type command to tell the computer what to do instead of clicking with your mouse makes perfect sense and so you can see how you can ask these follow-up questions and it will actually explain things for you making it really easy to learn I put together a list of really useful prompts and terminology that you should become familiar with and I left a link in the description so make sure to check it out totally free no email list nothing like that so when you say I should run npm in it where do I do that how do I use the terminal I got VSS code by the way okay using the terminal and VSS code is straightforward integrate smoothly in your coding environment explains how to do it for us right so essentially we're going to follow these steps and we're going to set up our project so let's say we got npm in nit now I don't know what this package Json does right so like I could ask it follow-up questions about that let's go ahead and do that run npm andit okay we got a package.json here now it says go ahead and create a file named server.js with this code and we just copy that right over okay I got that code so one thing I like to do with Chad GPT is to have it explain code for me so if it's written something or if I just found some code I'm unfamiliar with I can just ask it directly to explain the code and then dig into the details so check this out so this gives me a good start but let's say I'm brand new and I don't know what the syntax means I can just ask the follow question here I'm asking how the syntax of the code actually works so you can see that you can really get into the details and really learn a lot by following this process now let's go back to building our little app I skipped this step it said npm install Express okay let's do that what does it mean to npm install Express okay so it explains what that did for us see this way you can get answers much more quickly than if you were searching online like if you were Googling this question you might find 10 different links and then have to dig through to find the actual answer but when you ask Chad GPT you can get the answer much more quickly I want to make an important note that you really need to use one of the topend models to write code because something that's free like gpt3 or llama is just not going to do a very good job and it's just going to leave you frustrated so seriously do yourself a favor and just pay the 20 bucks for Chad GPT Plus or Claude and it's going to pay off in a huge way now we're going to run your server using node server.js okay let's copy that over server is running on Port 3000 okay I wonder what that means visit this URL and to see the hello world message look at that we got our first web app put together in a matter of minutes using chat GPT even if you don't know how to code I didn't have to write any code to make this happen even if I don't totally understand what each of these commands is doing it's helping me move forward and then when I see things break or when things don't make sense I can ask follow-up questions so that Chad GPT can explain it for me this becomes a much faster way to learn than Googling things because the answer can just be customized to what you're looking for and Chad GPT understands the context in which you're asking that sort of question so I can start putting together a list of questions that I can explore with Chad GPT and after often times it makes sense to have a chat where you're doing this sort of exploration and a separate chat where you're doing a lot more of the coding and having it build upon the code that it originally wrote and is helping you edit so I can save off these questions and just have chat GPT answer them in a separate thread I'll show you how I use Chad GPT to troubleshoot issues and write additional code in a moment but I wanted to share this highle blueprint with you which touches upon the various ways in which you can interact with Chad GPT to help you learn how to code so first I would start with asking it to actually go ahead and build something and you can just have Chad gbt write that code if you don't know how that code works you can then have it explain things about the code and you can ask follow-up questions if it references certain Concepts that may be new try to run that code and see if you get any errors and if you do paste those back into Chad GPT and have it help you troubleshoot what the problem may be after you do some investigation Chad GPT is going to give you some changes that you can make to get more functional code and if you get stuck at suggest to use that opportunity to dig into what the code is actually doing and understand line by line what is happening and you can just ask Chad GPT to explain that and that can help you identify the problem and learn along the way finally as you want to make changes to your code just take your code paste it into Chad GPT ask for the changes and paste them back in and see what happens and if you see some errors keep repeating that process until you get to the point that you're happy with it sometimes it can feel like you get stuck in an infinite Loop but again just use that opportunity to literally understand what is happening in the code and have chat GPT explain it to you now let's have chat GPT finish our UI code improve it based on our feedback and troubleshoot issues as a problem comes up okay so now it's saying npx create react app client all right let's run that okay so that command finished running now we can CD client and then npm start okay let's try that CD client npm start hey check it out we got our react App working on our Local Host Local Host is just your own computer basically let's ask I heard something about apis what are they and how can I add one to this app so you can see it's building on the context of what it previously showed us so in this example it's saying open the server JS file and you can add a route okay we're going to have this hello world from the API added to our server can you make the react client use this API and display that in the UI somehow okay let's see what it tells us to do it says to use fetch to call your API and it gives us a bunch of codes so that we can directly replace app.js let's try it out okay so I went to this and it says API message but it doesn't have a message let's do some trouble shooting with Chad GPT and figure out what went wrong so in this case I'm going to tell it what I saw and what the message was now if I read carefully it does actually tell me what is going on here because it tells me to run the server on a different port but we can pretend that I missed that and see what it says okay so it gives us some troubleshooting steps let's try going here and see what we see there okay uh so it just says can't be reached let's tell it that okay so now we've taken a second step we've told it the new error that we see and it's giving us some instructions to get things back on track okay so it's saying like make sure your server is running let's go ahead and make sure it is okay it also tells us to check for this cores policy so and it tells us how we can figure that out so F12 check out in the console tab let's see if we see anything like that going on okay okay oh hey look at that there's the chors error let's see what Chad gbt tells us to do okay we got to add this stuff to our server let's see if that fixes our message there we go look at that hello world from the API so now we actually have the server and the UI connected so just imagine learning about cores in a classroom I mean how quickly would you forget what this is for and why it matters but encountering the cont when you're trying to build an app makes you actually try to understand what is going on and why it matters and then your brain is going to retain that information much better so let's ask Chad jpt to iterate on the code for us okay I finally got it working can you make the font bigger and include a number that goes up every time I press a button so one thing I remember having to fix in the earlier code is that when I do this fetch it actually had to have Local Host so one trick that I like to use is to tell Chad GPT my current code before it writes new code so so that it makes sure to do it the right way so I told it I had to make some changes here's the latest code can you rewrite what you just said all right and now we can see that it actually adds that fix to the response that it generates okay here we go we got a counter button and now every time I click it adds to the counter very cool oh one more thing I want to mention is that there is this new code editor that I've been trying out I've just tried it for a few days but I am enjoying it so far it is called Cur and it has AI built directly into it so you can actually have much more intelligent autocomplete and you can ask it about different files I'm still exploring it so I don't quite know all the details of how it works but if you want to stay on top of things make sure to check it out because it is pretty cool okay so hopefully that's enough for you to get started but if you're wondering does it even make sense to code anymore now that AI can do it check out this video where I share my thoughts and check out this video if you're feeling more confident about coding and you're ready to get started on more technically challenging project I'll see you there take care",
      "title": "How To Learn Coding FAST (using AI) Volo 18200 subscribers 120 likes 3429 views 29 Mar 2024 It's never been easier to learn how to code thanks to AI. I will show you how I would learn to code if I could start over and how I would use ChatGPT to quickly learn coding. I will also show you how AI can write code for you and how you can troubleshoot that code with ChatGPT. Will AI automate coding? Large portions of it, yes - but that will only empower problem solvers like us to add more value and solve bigger problems even more quickly! I believe that the future of Software Engineering lies in guiding AI Agents to build software for us and this hands-on tutorial will show you what that future might look like. 📚 Resources: - Free Coding Prompt Guide: https://github.com/VoloBuilds/prompts/blob/main/LearnToCode.md 🚀 In This Video, You'll learn: - The best way to learn coding in 2024 - How to use AI to learn to code - How to use AI to write code for you - Best tech stack to learn how to code - Best programming language to start with - Best way to start coding - What projects to focus on when learning how to code - How to troubleshoot code with AI - Prompts to code with ChatGPT - Coding in 2024 - Web Development 2024 💡 Perfect for Viewers Interested in: - Software Development - Future of coding - Learning to code in 2024 - Using AI to code - Coding with AI - Learning about the latest AI tech - Generative AI Subscribe for more tutorials on AI and programming and to stay up to date on the latest AI updates and news!! 💬 Questions or Feedback? Drop your thoughts in the comments below, and I'll be sure to get back to you! #ai #artificialintelligence #coding #futureofwork #codewithai #aicoding #gpts #openai #chatgpt #nvidia #jensenhuang #gpus #programming #software #softwaredev #webdevelopment #webdev Chapters 00:00 - The Basic Approach 01:06 - Best Tech Stack 02:48 - What To Build First? 05:02 - Hands On Learning with ChatGPT 09:30 - Best Way To Code with ChatGPT 11:40 - Modifying Code & Troubleshooting 21 comments hey Chad GPT I'm a brand new web developer and I want you to give me just a really high level but very concise explanation of how a website works sure thing a website functions through a combination of several components interacting with each [Laughter] [Music] other okay can you tell me a little bit more about what role JavaScript plays in all of this JavaScript allows users to interact with web pages in real time this includes anything buttons that high or show more content to forms and an too okay let's say I wanted to write some code how would I actually go about doing that to start writing code especially as a new web developer you'll follow a few straightforward steps here's a simple guide to get you going so just like that you can get started learning how to code without signing up for a 4-year computer science degree and you don't have to spend thousands of dollars on boot camps just to sit through hours of boring lectures and tutorials now I don't have a course to sell you I just want to show you a way that you can use Chad GPT to get started and the right kind of questions to ask to really accelerate your progress by the end of this video you'll have a simple app put together even if you know nothing about coding today so let's go ahead and get started the first thing that you're going to want to do is pick a programming language and a Tex stack that you want to learn and a Tex stack is just a combination of technologies that work together to allow you to build a full application the stack that I recommend is called M it stands for Express react and nodejs and this stack is going to enable you to use JavaScript across the full stack and make it a lot easier to learn new information because you're not going to be switching between different languages also the data is going to be a lot easier to understand because the way that you use it in the code it's going to be the same way that it's represented in the database it's going to be the same way that it's sent to the UI and so it's going to be consistent throughout so you're not going to have to make as many mental switches as you would if you are using a stack with multiple languages also I've heard some people recommend starting with just plain JavaScript HTML and CSS and I actually recommend against that because I think it can actually get confusing and then discouraging once you run into a bunch of issues a lot of the modern Frameworks that we use nowadays such as react were actually designed to resolve a lot of the headaches that you would encounter if you were to just use plain JavaScript HTML and CSS so I would prefer to actually start with a framework and then work backwards if you need to dig into the details on how some of these Technologies work on a lower level but I find that the popular Frameworks are often well written enough where I don't have to actually do that I'm going to get into the specific prompts that you can use and how you can actually develop with AI but first I want to talk about the sort of projects and the sort of things that you should actually focus on building to help you build some real world experience and have some skills that are going to apply to many different projects that you could actually work on the most important thing that you can do is to just get started so go ahead and download vs code right now that's going to be your code editor and then you can ask Chad GPT for instructions on how to use it where you can put the code what the codee is actually going to do and so on once you have VSS code installed and you're comfortable asking Chad GPT for advice you're going to want to think of some practical problems that you want to solve maybe you can start with something super basic to get familiar with how the Technologies work like a hello world sort of app which I'll show you later in the video but after that you're going to want to find a problem that you want to solve and start coding to figure out how to actually solve it one of the reasons that you want to pick a practical problem to solve and ideally something that you're interested in is because it's going to give you a very natural reason to actually learn things and then retain the information that you learn because your mind will see the purpose behind learning something rather than just getting a bunch of information stuffed into it and then just letting it fly out the other ear you will start to see why certain Technologies are necessary and how they fit into the bigger puzzle so for me as a YouTuber one problem that I've encountered is that I don't know what my thumbnails are going to look like on a video before I upload it and so I've been working on this app that's going to help me actually preview what the thumbnails are going to look like amongst a bunch of other YouTube videos one of the things that I wanted to do is make sure that I get the sizing of everything just right so it looks just like the YouTube website so I really had to dig into the details of CSS and understand how certain properties have a different effect on these various elements on the web page by trying to precisely imitate that layout I was able to learn some new CSS properties that I didn't know about before and this was a very natural way for me me to explore that because I was learning something new that I had to learn in order to achieve what I wanted to do so try to think of something that you might actually want to use and try to build it even if the final product is super complicated and doesn't seem realistic for you to build now you're going to be able to start building a lot of skills as you slowly approach that final product okay so let's say you know what you want to create but you still don't know how to code let's head over to Chad GPT and I'll share a bunch of different prompts with you and have Chad GPT write a lot of the code for for you explain it to you and help you actually learn how it works okay so we're going to go to Chad GPT and put in this simple prompt to get started from scratch I'm brand new to coding and I want to use the M Stack to build a basic hello world web app what do I do okay and it gave us a pretty thorough explanation here look it explains what M is so we can use these terms to ask follow-up questions to explain these different components these Technologies work together to enable full stack development it explains what they're used for okay set up your development environment install node.js and npm look at that it gives us a link so we can go here can download node.js so let's say we've done that we can go download mongodb install a code editor Visual Studio code okay let's do that initialize your project create a new directory for your project and navigate into it in your terminal or command prompt okay so let's just ask what that means what is a terminal what is it used for okay terminal also known as a CLI or shell is a text based interface so this is a really thorough explanation it might make me feel overwhelmed so I'm just going to ask can you explain that in a few simple sentences with an example okay that's much better a terminal is like a special window on your computer where you type command to tell the computer what to do instead of clicking with your mouse makes perfect sense and so you can see how you can ask these follow-up questions and it will actually explain things for you making it really easy to learn I put together a list of really useful prompts and terminology that you should become familiar with and I left a link in the description so make sure to check it out totally free no email list nothing like that so when you say I should run npm in it where do I do that how do I use the terminal I got VSS code by the way okay using the terminal and VSS code is straightforward integrate smoothly in your coding environment explains how to do it for us right so essentially we're going to follow these steps and we're going to set up our project so let's say we got npm in nit now I don't know what this package Json does right so like I could ask it follow-up questions about that let's go ahead and do that run npm andit okay we got a package.json here now it says go ahead and create a file named server.js with this code and we just copy that right over okay I got that code so one thing I like to do with Chad GPT is to have it explain code for me so if it's written something or if I just found some code I'm unfamiliar with I can just ask it directly to explain the code and then dig into the details so check this out so this gives me a good start but let's say I'm brand new and I don't know what the syntax means I can just ask the follow question here I'm asking how the syntax of the code actually works so you can see that you can really get into the details and really learn a lot by following this process now let's go back to building our little app I skipped this step it said npm install Express okay let's do that what does it mean to npm install Express okay so it explains what that did for us see this way you can get answers much more quickly than if you were searching online like if you were Googling this question you might find 10 different links and then have to dig through to find the actual answer but when you ask Chad GPT you can get the answer much more quickly I want to make an important note that you really need to use one of the topend models to write code because something that's free like gpt3 or llama is just not going to do a very good job and it's just going to leave you frustrated so seriously do yourself a favor and just pay the 20 bucks for Chad GPT Plus or Claude and it's going to pay off in a huge way now we're going to run your server using node server.js okay let's copy that over server is running on Port 3000 okay I wonder what that means visit this URL and to see the hello world message look at that we got our first web app put together in a matter of minutes using chat GPT even if you don't know how to code I didn't have to write any code to make this happen even if I don't totally understand what each of these commands is doing it's helping me move forward and then when I see things break or when things don't make sense I can ask follow-up questions so that Chad GPT can explain it for me this becomes a much faster way to learn than Googling things because the answer can just be customized to what you're looking for and Chad GPT understands the context in which you're asking that sort of question so I can start putting together a list of questions that I can explore with Chad GPT and after often times it makes sense to have a chat where you're doing this sort of exploration and a separate chat where you're doing a lot more of the coding and having it build upon the code that it originally wrote and is helping you edit so I can save off these questions and just have chat GPT answer them in a separate thread I'll show you how I use Chad GPT to troubleshoot issues and write additional code in a moment but I wanted to share this highle blueprint with you which touches upon the various ways in which you can interact with Chad GPT to help you learn how to code so first I would start with asking it to actually go ahead and build something and you can just have Chad gbt write that code if you don't know how that code works you can then have it explain things about the code and you can ask follow-up questions if it references certain Concepts that may be new try to run that code and see if you get any errors and if you do paste those back into Chad GPT and have it help you troubleshoot what the problem may be after you do some investigation Chad GPT is going to give you some changes that you can make to get more functional code and if you get stuck at suggest to use that opportunity to dig into what the code is actually doing and understand line by line what is happening and you can just ask Chad GPT to explain that and that can help you identify the problem and learn along the way finally as you want to make changes to your code just take your code paste it into Chad GPT ask for the changes and paste them back in and see what happens and if you see some errors keep repeating that process until you get to the point that you're happy with it sometimes it can feel like you get stuck in an infinite Loop but again just use that opportunity to literally understand what is happening in the code and have chat GPT explain it to you now let's have chat GPT finish our UI code improve it based on our feedback and troubleshoot issues as a problem comes up okay so now it's saying npx create react app client all right let's run that okay so that command finished running now we can CD client and then npm start okay let's try that CD client npm start hey check it out we got our react App working on our Local Host Local Host is just your own computer basically let's ask I heard something about apis what are they and how can I add one to this app so you can see it's building on the context of what it previously showed us so in this example it's saying open the server JS file and you can add a route okay we're going to have this hello world from the API added to our server can you make the react client use this API and display that in the UI somehow okay let's see what it tells us to do it says to use fetch to call your API and it gives us a bunch of codes so that we can directly replace app.js let's try it out okay so I went to this and it says API message but it doesn't have a message let's do some trouble shooting with Chad GPT and figure out what went wrong so in this case I'm going to tell it what I saw and what the message was now if I read carefully it does actually tell me what is going on here because it tells me to run the server on a different port but we can pretend that I missed that and see what it says okay so it gives us some troubleshooting steps let's try going here and see what we see there okay uh so it just says can't be reached let's tell it that okay so now we've taken a second step we've told it the new error that we see and it's giving us some instructions to get things back on track okay so it's saying like make sure your server is running let's go ahead and make sure it is okay it also tells us to check for this cores policy so and it tells us how we can figure that out so F12 check out in the console tab let's see if we see anything like that going on okay okay oh hey look at that there's the chors error let's see what Chad gbt tells us to do okay we got to add this stuff to our server let's see if that fixes our message there we go look at that hello world from the API so now we actually have the server and the UI connected so just imagine learning about cores in a classroom I mean how quickly would you forget what this is for and why it matters but encountering the cont when you're trying to build an app makes you actually try to understand what is going on and why it matters and then your brain is going to retain that information much better so let's ask Chad jpt to iterate on the code for us okay I finally got it working can you make the font bigger and include a number that goes up every time I press a button so one thing I remember having to fix in the earlier code is that when I do this fetch it actually had to have Local Host so one trick that I like to use is to tell Chad GPT my current code before it writes new code so so that it makes sure to do it the right way so I told it I had to make some changes here's the latest code can you rewrite what you just said all right and now we can see that it actually adds that fix to the response that it generates okay here we go we got a counter button and now every time I click it adds to the counter very cool oh one more thing I want to mention is that there is this new code editor that I've been trying out I've just tried it for a few days but I am enjoying it so far it is called Cur and it has AI built directly into it so you can actually have much more intelligent autocomplete and you can ask it about different files I'm still exploring it so I don't quite know all the details of how it works but if you want to stay on top of things make sure to check it out because it is pretty cool okay so hopefully that's enough for you to get started but if you're wondering does it even make sense to code anymore now that AI can do it check out this video where I share my thoughts and check out this video if you're feeling more confident about coding and you're ready to get started on more technically challenging project I'll see you there take care"
    },
    {
      "url": "https://news.microsoft.com/source/features/ai/how-ai-makes-developers-lives-easier-and-helps-everybody-learn-to-develop-software/",
      "content": "6 AI trends you’ll see more of in 2025 Skip to main content Microsoft Source Source Source Home Our Company Company News Official Microsoft Blog Microsoft On The Issues Europe Asia Latin America India UK Inclusion is Innovation Conexiones AI Innovation Digital Transformation Diversity & Inclusion Sustainability Work & Life Unlocked More All Microsoft Global ------ Microsoft 365 Teams Copilot Windows Surface Xbox Deals Small Business Support Software Software Windows Apps AI Outlook OneDrive Microsoft Teams OneNote Microsoft Edge Skype PCs & Devices PCs & Devices Computers Shop Xbox Accessories VR & mixed reality Certified Refurbished Trade-in for cash Entertainment Entertainment Xbox Game Pass Ultimate PC Game Pass Xbox games PC and Windows games Movies & TV Business Business Microsoft Cloud Microsoft Security Dynamics 365 Microsoft 365 for business Microsoft Power Platform Windows 365 Microsoft Industry Small Business Developer & IT Developer & IT Azure Developer Center Documentation Microsoft Learn Microsoft Tech Community Azure Marketplace AppSource Visual Studio Other Other Microsoft Rewards Free downloads & security Education Gift cards Licensing Unlocked stories View Sitemap Search Search news.microsoft.com/source No results Cancel 0 Cart 0 items in shopping cart Source 6 AI trends you’ll see more of in 2025 by Paul Nyhan In 2025, AI will evolve from a tool for work and home to an integral part of both. AI-powered agents will do more with greater autonomy and help simplify your life at home and on the job. On the global stage, AI will help us find new ways to address some of the biggest challenges we face, from the climate crisis to healthcare access. This progress will be driven by advancements in AI’s ability to remember more and reason better, among other innovations. And Microsoft will remain grounded in its commitment to help people use and build AI that is safe and secure. “AI is already making the impossible feel possible, and over the past year we’ve seen significant numbers of people and organizations moving from AI experimentation to more meaningful adoption,” says Chris Young, executive vice president of business development, strategy and ventures at Microsoft. “This is the start of a full-scale transformation of how this technology will change every part of our lives.” In the last year alone, generative AI usage jumped from 55% to 75% among business leaders and AI decisionmakers. New AI tools will bring even more potential. Want to know what’s ahead? Here are six AI trends to watch — and how Microsoft will innovate on each — in 2025. AI models will become more capable and useful Over the past year, AI models became faster and more efficient. Today, large-scale “frontier models” can complete a broad range of tasks from writing to coding, and highly specialized models can be tailored for specific tasks or industries. In 2025, models will do more — and do it even better. Models with advanced reasoning capabilities, like OpenAI o1, can already solve complex problems with logical steps that are similar to how humans think before responding to difficult questions. These capabilities will continue to be useful in fields like science, coding, math, law and medicine, allowing models to compare contracts, generate code and execute multistep workflows. These advancements will be important in model innovation, but so will progress in data curation and post-training. For example, Microsoft’s family of small Phi models showed that curating high-quality data can improve model performance and reasoning. And Microsoft’s Orca and Orca 2 showed the power of synthetic data for post-training small language models, getting these models to perform at levels previously found only in much larger language models and to perform better on specialized tasks. Making models faster, better and more specialized will create new and more useful AI experiences, including with agents, in 2025. “There could be synergy between how we are training the models and how those models are powering agents in return,” says Ece Kamar, managing director of Microsoft’s AI Frontiers Lab. “And people will now have more opportunity than ever to choose from or build models that meet their needs.” Agents will change the shape of work Workers at nearly 70% of Fortune 500 companies already use Microsoft 365 Copilot to tackle plenty of repetitive and mundane tasks, such as sifting through email and taking notes during Teams meetings. In 2025, a new generation of AI-powered agents will do more — even handling certain tasks on your behalf. “Think of agents as the apps of the AI era,” says Charles Lamanna, corporate vice president of business and industry Copilot. “Just as we use different apps for various tasks, agents will begin to transform every business process, revolutionizing the way we work and manage our organizations.” With advancements in memory, reasoning and multimodal capabilities, agents will handle more complex assignments with new skills and ways to interact. Organizations can reimagine processes like creating reports and human resources tasks such as helping resolve a new laptop issue or answering benefits questions, freeing employees to focus on higher value work. Businesses can set up multiple agents to alert supply chain managers about inventory disruptions, recommend new suppliers and execute sales orders, handling daily challenges to help keep sales coming in. And you can build and use agents no matter your technical skill. Anyone can build an agent in Copilot Studio — no coding required — while developers can create more sophisticated agents to orchestrate more complex tasks in Azure AI Foundry. All of this will lay the groundwork for a future when organizations have a constellation of agents — from simple prompt-and-response to fully autonomous — that will work independently or together on behalf of individuals, groups or functions to execute and orchestrate processes. Amid all this AI development, human oversight will remain a central cog in the evolving AI-powered agent wheel, says Kamar. “In 2025, a lot of conversation will be about drawing the boundaries around what agents are allowed and not allowed to do, and always having human oversight,” Kamar says. AI companions will support you in your everyday life Outside of work, AI is expected to make parts of your life easier in 2025. That’s because Microsoft Copilot can support you throughout your day as your AI companion. This means it will help simplify and prioritize tasks like your daily barrage of information to free up more of your time, all while safeguarding your privacy, data and security. As Copilot evolves over the next year, it will help you stay more connected and will have new capabilities. Copilot Daily, for example, will start your day by reading you a summary of relevant news and weather in a familiar voice. When you opt-in to use Copilot Vision, it will be able to see what you see online and talk with you about it because it will understand the web page you’re viewing, allowing it to answer your questions and suggest next steps. Copilot will also help you make decisions. It could help you furnish your new apartment by searching for matching furniture and then help you think through the best way to arrange all of it to achieve feng shui. And that’s only the beginning. In the coming years, AI experiences will become increasingly accurate and gain better emotional intelligence for more fluid interactions. AI will become more resource-efficient over time While AI needs resources like energy, innovative solutions are helping with this challenge. Even as global datacenter workloads in 2020 were roughly nine times what they were in 2010, for example, datacenter electricity demand increased only 10%. That’s in part because Microsoft is working on its own and with others, like AMD, Intel and NVIDIA, to make its hardware more efficient, from its custom silicon series, Azure Maia and Cobalt, to its liquid cooling heat exchanger unit designed to efficiently cool large-scale AI systems. In the coming years, new datacenters that support AI will come online and consume zero water for cooling and the company will expand its use of superefficient liquid cooling systems such as cold plates. It’s all part of a broader effort to make the infrastructure AI is built on more efficient and sustainable in 2025. As Microsoft helps build a more efficient AI infrastructure, it will continue to invest in and use more low-carbon building materials, like near-zero carbon steel, concrete alternatives and cross-laminated timber. Microsoft will also keep investing in and using carbon-free energy sources like wind, geothermal, nuclear and solar power. The company is making long-term investments to bring more carbon-free electricity onto the grids where it operates and continues to advocate for the expansion of clean energy solutions around the world. This is only a slice of Microsoft’s planned infrastructure that will advance its goal to be a carbon negative, water positive, zero waste company by 2030, says Mark Russinovich, Azure’s chief technology officer, deputy chief information security officer and technical fellow. “In 2025 and beyond we’re going to increasingly have a holistic view of datacenters, energy and resources, so that we can maximize the efficiency of our entire infrastructure,” Russinovich says. Measurement and customization will be keys to building AI responsibly Measurement is defining and assessing risks in AI, and it’s critical for building AI responsibly. One of the biggest developments this coming year can be summarized in two words: testing and customization. If you can measure risks and threats, you can help address or mitigate both. This means, for example, detecting and addressing ungrounded content, known as “hallucinations,” which are inaccurate responses from AI. Part of Microsoft’s ongoing work to build safe AI applications is developing tough and comprehensive testing, says Sarah Bird, Microsoft’s chief product officer of Responsible AI. In addition to assessing internal threats like hallucinations, testing will become better at recognizing external and increasingly sophisticated attacks. “Even as models get safer, we need to bring testing and measurement up to the worst of the worst threats that we see — testing that represents a sophisticated adversarial user and what they’re able to do,” Bird says. “We have the foundation, and we’re going to continue to iterate on it moving forward.” People will also gain greater control over how AI applications operate within their organizations. They will be able to customize applications that filter content and establish guardrails that fit their work. A gaming company, for example, will be able to specify what kinds of violent content employees who are building games can see. “The administrator can change the control of Microsoft 365 Copilot to say what types of content are appropriate in a workplace so people can do their jobs,” Bird says. “Control and customization are absolutely the future.” AI will accelerate scientific breakthroughs AI is already having a dramatic impact around the world, driving advances in everything from supercomputing to weather forecasting. It’s fueling historic breakthroughs in scientific research and promises to unlock new capabilities in the natural sciences, sustainable materials, drug discovery and human health. In 2024, for example, Microsoft Research made a breakthrough that will allow researchers to explore some of the world’s toughest biomolecular science problems, including the discovery of life-saving new drugs, with unprecedented speed and precision. Using an AI-driven protein simulation system, researchers found a new way to simulate biomolecular dynamics. This method, called AI2BMD, could help scientists solve previously intractable problems and fuel biomedical research in protein design, enzyme engineering and drug discovery. And AI’s impact on science will continue to grow. One of the most exciting things to watch in 2025 will be how AI’s use in scientific research fuels progress in addressing some of the world’s most pressing concerns, says Ashley Llorens, corporate vice president and managing director at Microsoft Research. “We’ll start to see these tools having a measurable impact on the throughput of the people and institutions who are working on these huge problems, such as designing sustainable materials and accelerating development of life-saving drugs,” Llorens says. In 2025, one trend is certain: AI will continue to drive innovation and unlock new potential for people and organizations around the globe. Illustrations by Michał Bednarski / Makeshift Studios. Story published on Dec 5, 2024. AI Technology Work & Life What's new Surface Pro Surface Laptop Surface Laptop Studio 2 Surface Laptop Go 3 Microsoft Copilot AI in Windows Explore Microsoft products Windows 11 apps Microsoft Store Account profile Download Center Microsoft Store support Returns Order tracking Certified Refurbished Microsoft Store Promise Flexible Payments Education Microsoft in education Devices for education Microsoft Teams for Education Microsoft 365 Education How to buy for your school Educator training and development Deals for students and parents Azure for students Business Microsoft Cloud Microsoft Security Dynamics 365 Microsoft 365 Microsoft Power Platform Microsoft Teams Microsoft 365 Copilot Small Business Developer & IT Azure Developer Center Documentation Microsoft Learn Microsoft Tech Community Azure Marketplace AppSource Visual Studio Company Careers About Microsoft Company news Privacy at Microsoft Investors Diversity and inclusion Accessibility Sustainability English (United States) Your Privacy ChoicesConsumer Health Privacy Sitemap Contact Microsoft Privacy Manage cookies Terms of use Trademarks Safety & eco Recycling About our ads © Microsoft 2024",
      "title": "6 AI trends you’ll see more of in 2025 Skip to main content Microsoft Source Source Source Home Our Company Company News Official Microsoft Blog Microsoft On The Issues Europe Asia Latin America India UK Inclusion is Innovation Conexiones AI Innovation Digital Transformation Diversity & Inclusion Sustainability Work & Life Unlocked More All Microsoft Global ------ Microsoft 365 Teams Copilot Windows Surface Xbox Deals Small Business Support Software Software Windows Apps AI Outlook OneDrive Microsoft Teams OneNote Microsoft Edge Skype PCs & Devices PCs & Devices Computers Shop Xbox Accessories VR & mixed reality Certified Refurbished Trade-in for cash Entertainment Entertainment Xbox Game Pass Ultimate PC Game Pass Xbox games PC and Windows games Movies & TV Business Business Microsoft Cloud Microsoft Security Dynamics 365 Microsoft 365 for business Microsoft Power Platform Windows 365 Microsoft Industry Small Business Developer & IT Developer & IT Azure Developer Center Documentation Microsoft Learn Microsoft Tech Community Azure Marketplace AppSource Visual Studio Other Other Microsoft Rewards Free downloads & security Education Gift cards Licensing Unlocked stories View Sitemap Search Search news.microsoft.com/source No results Cancel 0 Cart 0 items in shopping cart Source 6 AI trends you’ll see more of in 2025 by Paul Nyhan In 2025, AI will evolve from a tool for work and home to an integral part of both. AI-powered agents will do more with greater autonomy and help simplify your life at home and on the job. On the global stage, AI will help us find new ways to address some of the biggest challenges we face, from the climate crisis to healthcare access. This progress will be driven by advancements in AI’s ability to remember more and reason better, among other innovations. And Microsoft will remain grounded in its commitment to help people use and build AI that is safe and secure. “AI is already making the impossible feel possible, and over the past year we’ve seen significant numbers of people and organizations moving from AI experimentation to more meaningful adoption,” says Chris Young, executive vice president of business development, strategy and ventures at Microsoft. “This is the start of a full-scale transformation of how this technology will change every part of our lives.” In the last year alone, generative AI usage jumped from 55% to 75% among business leaders and AI decisionmakers. New AI tools will bring even more potential. Want to know what’s ahead? Here are six AI trends to watch — and how Microsoft will innovate on each — in 2025. AI models will become more capable and useful Over the past year, AI models became faster and more efficient. Today, large-scale “frontier models” can complete a broad range of tasks from writing to coding, and highly specialized models can be tailored for specific tasks or industries. In 2025, models will do more — and do it even better. Models with advanced reasoning capabilities, like OpenAI o1, can already solve complex problems with logical steps that are similar to how humans think before responding to difficult questions. These capabilities will continue to be useful in fields like science, coding, math, law and medicine, allowing models to compare contracts, generate code and execute multistep workflows. These advancements will be important in model innovation, but so will progress in data curation and post-training. For example, Microsoft’s family of small Phi models showed that curating high-quality data can improve model performance and reasoning. And Microsoft’s Orca and Orca 2 showed the power of synthetic data for post-training small language models, getting these models to perform at levels previously found only in much larger language models and to perform better on specialized tasks. Making models faster, better and more specialized will create new and more useful AI experiences, including with agents, in 2025. “There could be synergy between how we are training the models and how those models are powering agents in return,” says Ece Kamar, managing director of Microsoft’s AI Frontiers Lab. “And people will now have more opportunity than ever to choose from or build models that meet their needs.” Agents will change the shape of work Workers at nearly 70% of Fortune 500 companies already use Microsoft 365 Copilot to tackle plenty of repetitive and mundane tasks, such as sifting through email and taking notes during Teams meetings. In 2025, a new generation of AI-powered agents will do more — even handling certain tasks on your behalf. “Think of agents as the apps of the AI era,” says Charles Lamanna, corporate vice president of business and industry Copilot. “Just as we use different apps for various tasks, agents will begin to transform every business process, revolutionizing the way we work and manage our organizations.” With advancements in memory, reasoning and multimodal capabilities, agents will handle more complex assignments with new skills and ways to interact. Organizations can reimagine processes like creating reports and human resources tasks such as helping resolve a new laptop issue or answering benefits questions, freeing employees to focus on higher value work. Businesses can set up multiple agents to alert supply chain managers about inventory disruptions, recommend new suppliers and execute sales orders, handling daily challenges to help keep sales coming in. And you can build and use agents no matter your technical skill. Anyone can build an agent in Copilot Studio — no coding required — while developers can create more sophisticated agents to orchestrate more complex tasks in Azure AI Foundry. All of this will lay the groundwork for a future when organizations have a constellation of agents — from simple prompt-and-response to fully autonomous — that will work independently or together on behalf of individuals, groups or functions to execute and orchestrate processes. Amid all this AI development, human oversight will remain a central cog in the evolving AI-powered agent wheel, says Kamar. “In 2025, a lot of conversation will be about drawing the boundaries around what agents are allowed and not allowed to do, and always having human oversight,” Kamar says. AI companions will support you in your everyday life Outside of work, AI is expected to make parts of your life easier in 2025. That’s because Microsoft Copilot can support you throughout your day as your AI companion. This means it will help simplify and prioritize tasks like your daily barrage of information to free up more of your time, all while safeguarding your privacy, data and security. As Copilot evolves over the next year, it will help you stay more connected and will have new capabilities. Copilot Daily, for example, will start your day by reading you a summary of relevant news and weather in a familiar voice. When you opt-in to use Copilot Vision, it will be able to see what you see online and talk with you about it because it will understand the web page you’re viewing, allowing it to answer your questions and suggest next steps. Copilot will also help you make decisions. It could help you furnish your new apartment by searching for matching furniture and then help you think through the best way to arrange all of it to achieve feng shui. And that’s only the beginning. In the coming years, AI experiences will become increasingly accurate and gain better emotional intelligence for more fluid interactions. AI will become more resource-efficient over time While AI needs resources like energy, innovative solutions are helping with this challenge. Even as global datacenter workloads in 2020 were roughly nine times what they were in 2010, for example, datacenter electricity demand increased only 10%. That’s in part because Microsoft is working on its own and with others, like AMD, Intel and NVIDIA, to make its hardware more efficient, from its custom silicon series, Azure Maia and Cobalt, to its liquid cooling heat exchanger unit designed to efficiently cool large-scale AI systems. In the coming years, new datacenters that support AI will come online and consume zero water for cooling and the company will expand its use of superefficient liquid cooling systems such as cold plates. It’s all part of a broader effort to make the infrastructure AI is built on more efficient and sustainable in 2025. As Microsoft helps build a more efficient AI infrastructure, it will continue to invest in and use more low-carbon building materials, like near-zero carbon steel, concrete alternatives and cross-laminated timber. Microsoft will also keep investing in and using carbon-free energy sources like wind, geothermal, nuclear and solar power. The company is making long-term investments to bring more carbon-free electricity onto the grids where it operates and continues to advocate for the expansion of clean energy solutions around the world. This is only a slice of Microsoft’s planned infrastructure that will advance its goal to be a carbon negative, water positive, zero waste company by 2030, says Mark Russinovich, Azure’s chief technology officer, deputy chief information security officer and technical fellow. “In 2025 and beyond we’re going to increasingly have a holistic view of datacenters, energy and resources, so that we can maximize the efficiency of our entire infrastructure,” Russinovich says. Measurement and customization will be keys to building AI responsibly Measurement is defining and assessing risks in AI, and it’s critical for building AI responsibly. One of the biggest developments this coming year can be summarized in two words: testing and customization. If you can measure risks and threats, you can help address or mitigate both. This means, for example, detecting and addressing ungrounded content, known as “hallucinations,” which are inaccurate responses from AI. Part of Microsoft’s ongoing work to build safe AI applications is developing tough and comprehensive testing, says Sarah Bird, Microsoft’s chief product officer of Responsible AI. In addition to assessing internal threats like hallucinations, testing will become better at recognizing external and increasingly sophisticated attacks. “Even as models get safer, we need to bring testing and measurement up to the worst of the worst threats that we see — testing that represents a sophisticated adversarial user and what they’re able to do,” Bird says. “We have the foundation, and we’re going to continue to iterate on it moving forward.” People will also gain greater control over how AI applications operate within their organizations. They will be able to customize applications that filter content and establish guardrails that fit their work. A gaming company, for example, will be able to specify what kinds of violent content employees who are building games can see. “The administrator can change the control of Microsoft 365 Copilot to say what types of content are appropriate in a workplace so people can do their jobs,” Bird says. “Control and customization are absolutely the future.” AI will accelerate scientific breakthroughs AI is already having a dramatic impact around the world, driving advances in everything from supercomputing to weather forecasting. It’s fueling historic breakthroughs in scientific research and promises to unlock new capabilities in the natural sciences, sustainable materials, drug discovery and human health. In 2024, for example, Microsoft Research made a breakthrough that will allow researchers to explore some of the world’s toughest biomolecular science problems, including the discovery of life-saving new drugs, with unprecedented speed and precision. Using an AI-driven protein simulation system, researchers found a new way to simulate biomolecular dynamics. This method, called AI2BMD, could help scientists solve previously intractable problems and fuel biomedical research in protein design, enzyme engineering and drug discovery. And AI’s impact on science will continue to grow. One of the most exciting things to watch in 2025 will be how AI’s use in scientific research fuels progress in addressing some of the world’s most pressing concerns, says Ashley Llorens, corporate vice president and managing director at Microsoft Research. “We’ll start to see these tools having a measurable impact on the throughput of the people and institutions who are working on these huge problems, such as designing sustainable materials and accelerating development of life-saving drugs,” Llorens says. In 2025, one trend is certain: AI will continue to drive innovation and unlock new potential for people and organizations around the globe. Illustrations by Michał Bednarski / Makeshift Studios. Story published on Dec 5, 2024. AI Technology Work & Life What's new Surface Pro Surface Laptop Surface Laptop Studio 2 Surface Laptop Go 3 Microsoft Copilot AI in Windows Explore Microsoft products Windows 11 apps Microsoft Store Account profile Download Center Microsoft Store support Returns Order tracking Certified Refurbished Microsoft Store Promise Flexible Payments Education Microsoft in education Devices for education Microsoft Teams for Education Microsoft 365 Education How to buy for your school Educator training and development Deals for students and parents Azure for students Business Microsoft Cloud Microsoft Security Dynamics 365 Microsoft 365 Microsoft Power Platform Microsoft Teams Microsoft 365 Copilot Small Business Developer & IT Azure Developer Center Documentation Microsoft Learn Microsoft Tech Community Azure Marketplace AppSource Visual Studio Company Careers About Microsoft Company news Privacy at Microsoft Investors Diversity and inclusion Accessibility Sustainability English (United States) Your Privacy ChoicesConsumer Health Privacy Sitemap Contact Microsoft Privacy Manage cookies Terms of use Trademarks Safety & eco Recycling About our ads © Microsoft 2024"
    },
    {
      "url": "https://www.youtube.com/watch?v=Xd-zFFGBD7A",
      "content": "This content isn't available. xd. 570 views · 2 months ago ...more. Marki. 4.86K. Subscribe. 38. Share. Save. Report. Comments2.",
      "title": "This content isn't available. xd. 570 views · 2 months ago ...more. Marki. 4.86K. Subscribe. 38. Share. Save. Report. Comments2."
    },
    {
      "url": "https://www.youtube.com/watch?v=1quHNuX7QHk",
      "content": "Should Beginner Programmers Use AI? (It’s Not That Simple…) Tech With Tim 1700000 subscribers 534 likes 11391 views 11 Feb 2025 If you're learning to code right now, then I'm sure AI is something that's on your mind. I want to answer the question: should you as a beginner programmer use AI when you're learning how to code? Now this is a highly debated topic, I've heard all kinds of people saying that you should, and all kinds of people saying that you shouldn't. In today's video, I want to break it down and make an argument from both sides. Check out the FREE guide on how to succeed as a developer in the world of AI from myself and HubSpot: https://clickhubspot.com/f48y 🚀 My Software Development Program: https://coursecareers.com/a/techwithtim?course=software-dev-fundamentals&campaign=youtubedescription 📬 Join my Newsletter: https://techwithtim.net/newsletter 🎓 Get private mentorship from me: https://training.techwithtim.net ⏳ Timestamps ⏳ 00:00 | Overview 00:34 | Reasons You SHOULD Use AI 04:28 | Reasons You Should NOT Use AI 11:12 | My Take Hashtags #SoftwareProgramming #AI #SoftwareDevelopment 72 comments if you're learning to code right now then I'm sure AI is something that's on your mind and in today's video I want to answer the question should you as a beginner programmer use AI when you're learning how to code now this is a highly debated topic I have all kinds of people saying that you should all kinds of people saying that you shouldn't and in today's video I want to break it down and make an argument from both sides reasons why you should reasons why you shouldn't and ultimately my thoughts and my opinion on this topic as someone who teaches millions of people how to code specific spefically beginner programmers so let's get into the video starting with the pros so Point number one in favor of using AI is that it drastically accelerates the learning curve now there's been all kinds of research out there and I could see this firsthand from many of my students those of them that use AI just learn faster than those that don't that's because it can instantly reply to anything that you need and you don't need to wait for someone to answer you on stack Overflow or for your teacher or tutor to give you a reply and it can adapt to any thing that you ask it so yes you are going to learn significantly Faster by using Ai and you can get through so many of those problems that otherwise would have taken you hours to solve or you would have needed to wait for some kind of reply now reason number two in favor of using AI is that it really does reduce frustration I know a lot of times when you're learning something new you get frustrated with small errors bugs little things that you don't understand where otherwise you would need to spend hours trying to look up the answer need to find someone to explain it to you but with AI it can just instantly solve that problem it can instantly help you overcome that little issue that you're running into now I know when I was teaching coding especially to younger kids that were about 14 or 15 a lot of the times they got extremely frustrated because their code wouldn't run and 90% of the time it was a small error like a missing quotation mark a broken bracket the indentation level was wrong if they could simply copy that code to Ai and have that answer instantly fixed that would reduce a lot of frustration and allow them to move significantly faster now Point number three in favor of using AI is that it massively boosts your productivity whether you're learning or you're trying to build something using AI as a tool will help you do it significantly faster it can generate code for you it can solve problems you can go back and forth with it to design the architecture of your problem or to ask at something that you don't understand and I think it's not really debatable that if you have ai beside you when you're coding you will code faster and you will get more done now Point number four is that it's fantastic for checking for understanding you can get AI models to generate quiz questions for you you can go into something like chat GPT voice mode you can speak to the model explain some concept to it and then get it to give you all of the inaccuracies or tell you how you could improve your understanding I personally use this all the time I'll go I'll just say something to the AI model and say does that make sense is my understanding correct is there anything that I could look at to better understand this problem or this topic and it will go ahead and tell me exactly what that is so if you're verifying the knowledge that you've learned you can do that very quickly with AI models and really get them to quiz you and make sure that you do understand what it is that you're learning point number five is that AI is fantastic for debugging small problems now again A lot of times as a beginner programmer most of the problems you run into are syntal there are basic mistakes they're things that any experienced programmer could figure out in 5 or 10 seconds and you get very frustrated and often times really lose your train of thought or your progress because you just can't figure out these tiny little problems maybe you spend hours searching stack overflow when now with AI you could just paste your code and have it pretty much instantly be fixed again especially if this is a small problem now there's some cons associated with this which I'll talk about later but generally it's very great for debugging and like I said before getting over that frustration and allowing you to move on to the next topic and now the last major Pro on my list and this is probably the most compelling is that It prepares you for the future look we all know that we're using AI more and more humans are becoming more resilient on it it's getting better and better and in the future a lot of the code that's going to be generated will be ritten by AI that could be a good or a bad thing depending on how you look at it but if you are a beginner learning how to code it's valid to say that you should probably learn how to use AI because that's something you'll be using more and more now I think there's some negatives as well which we'll get to in a second but generally the better you can get at using these AI tools the better off you will be and that's another argument why you may want to use it as a beginner now we'll start getting into all of the reasons you shouldn't be using AI but I first want to share with you a fantastic free resource that I put together in collaboration with HubSpot which is a free guide on how to land a developer role in the world of AI now this guide draws on my over decade of experience and covers the top programming languages that you should master and the most effective ways to learn them it also includes best practices for crafting your resume and portfolio and recommendations for resources like YouTube channels that you can use to enhance your skills I've left link to it in the description where you can check it out completely for free now personally my favorite part of this guide is the long list of free resource like websites and YouTube channels that really can help you level up as a developer completely for free this guide focuses on how to distinguish yourself in the world of AI so that you remain competitive and you can actually land a job a massive thank you to HubSpot for sponsoring this video and helping me create this resource and again you can get it for free by clicking that link in the description so the first major down sight of using AI when you're a beginner is that it can lead to over resilience if you use this too much if it's an aid if it's something you really need in order to get something done then you can be left pretty hopeless when it comes to writing code on your own or if you're in an interview for example and you're not allowed to use AI how are you going to solve that lead code style question the point is you don't want to become too resilient on this tool and you should be able to write code without it which I think a lot of beginners really can't do today now the next point I have here I think is a pretty big deal and this is that it hinders your logical thinking now when you really rely on AI when it does all of the problem solving for you when it fixes that bug when it overcomes that error it really does limit how much you're learning and how good you're getting at problem solving and critical thinking in my opinion one of the biggest issues we have today is that students and especially children don't learn how to think by themselves they're constantly just fed information they memorize things they have super short attention spans like they can't even go 5 Seconds without scrolling to something new and now we get into programming where they can just use AI to do anything that they need and they're really not developing that super important skill which is critical thinking I was seeing this even many years ago when I was teaching coding to kids and today it's gotten significantly worse and I even noticed with myself someone who didn't grow up in the Tik Tok era that my attention span is drastically decreasing my critical thinking is getting worse and I really think it's a pretty negative thing and something that we should consider and try to improve as best as possible now the next point I have here is that AI makes it harder for you to read and write code what I mean by that is if you're constantly using AI for code generation and for understanding code you're not working your way towards that 10,000 hours that you really need of hands-on experience writing code in the editor the reason I believe I got good at programming and most other people do is because they actually write code they use their fingers they go on the keyboard and they write it line by line hundreds if not thousands of times and that not only forces them to memorize what they're doing but to get a lot of experience crafting programs writing things out there's all kinds of studies on this but when you of course handw write something else you comprehend it better same thing I believe when it comes to coding when you write it yourself on the keyboard you learn it better than if you simply have an AI model generated for you so again we're moving towards an era where you are doing a lot more code generation than physically writing at yourself but as a beginner I think it's important to get a lot of experience with your hands actually on the keyboard Where You Are doing every single keystroke and writing the code out line by line that will help you memorize the syntax and get past the basics a lot faster next major negative of using AI is that it can make mistakes and in fact it makes them a lot especially as you get into larger code bases if you simply rely on AI and you don't know how to do what it's generating on your own you're not going to know if the AI model is giving you the correct output or not and this is what I always say yes we can use AI but someone needs to verify that what the AI is is giving us is actually correct and the only way to do that is to actually know what to do on your own and to Simply use the AI to get it done faster for me personally AI only ever generates code for me that I could have rid manually myself that way when I read the code I know if it's correct or not and I fear that a lot of beginners don't actually realize that half the stuff the AI model is giving them is not correct it makes a mistake it's not solving the problem or satisfying the requirement and there are many many many times I need to correct wreck the model and tell it that what it just gave me is complete garbage and not correct now the next major downside of using AI is that it doesn't teach you the best practices now sure it might teach you a concept but a lot of times when I use the AI model it misses a lot of important things that allow me to generate quality code so for example it might use something that's outdated from a framework it might show me a way of doing something that works but really should never be used in a production code base many times I find myself having to refactor the AI generated code myself because I know the way that it just wrote this is not something that's really proper and that I wouldn't want to exist in my codebase now if you're a beginner obviously you're not going to know that so if you just learn everything from the AI model and you don't consult other resources or Professionals in the field you're going to be writing code in really not the best ways and things that you might be submitting for example for your first PLL request could honestly be embarrassing completely out of date or something that you should never produce as a real professional software engineer and the last major negative that I thought was worth mentioning is that AI can pose a massive security risk if you are copying and pasting production code especially of maybe Security based products into an AI model or using it in something like cursor wind surf something where it is connected to the internet that obviously is a massive security risk not something you would ever do and something that could very easily get you fired or cost your company Millions upon millions of dollars at the end of the day we don't know what these companies are doing with our data we don't know if our data is safe with them them and unless we're running an open source model completely locally on our own machine that's not connected to the internet there's no guarantee that what we're giving to these models isn't being sent somewhere else copied used being used to potentially hack us Etc so a lot of companies for that reason do not even allow you to use AI when it comes to generating code they have strict policies against it and they don't even allow you to take code and copy it into the model because again that's a massive security risk so something worth mentioning here that you should definitely consider especially if you get hired at a company and they tell you oh by the way yeah you can't use AI you got to write it by yourself and you've never got that experience writing code on your own so with all that in mind let me give you my key takeaway here an overall opinion on if you should be using AI as a beginner programmer so my opinion on this topic has changed over the years I'm sure it will continue to change as AI gets better and better but as of now January 2025 this is what I think I do believe the beginner programmers should be utilizing AI I think it's an important tool it's something that's worth learning but it's very important the way in which they do so first things first I do not think they should use AI for code generation in other words you shouldn't be getting an AI model to generate any code for you that you couldn't otherwise write yourself you should really be treating it more like a tutor an assistant a mentor someone who can guide you in the right direction challenge you ask you questions check your understanding but not something that just does the work for you for example if you were to hire me as your Mentor you wouldn't want me just to sit there and write all of the code to just directly give you the answer you would want me to challenge you ask you questions guide you really make you critically think and make you improve as a developer and by the way if you do want to do that you can actually hire me as your Mentor from the link down below I have a program called Dev launch we have a few more slots open for any of you that are serious and you can apply for it from the link in the description the point is you want this to help you get better as a developer not just do everything for you so be very careful when you're utilizing the a tools and ensure that anything that it's giving you especially if it's code you fully understand now that's another point A lot of times these models do make mistakes so if it says something and you're not quite sure about it please go and verify it with other resources watch a YouTube tutorial go to stack Overflow do the things that us as developers have had to do for all of the years before AI existed to make sure that what you're using this AI for and the answers it's giving you are actually correct and another point along those lines is that you really should shouldn't skip all of the fundamentals of computer science and programming just because AI can write code for you doesn't mean it's not important to understand computer science principles things like data structures and algorithms time complexity analysis programming language fundamentals strongly typed languages dynamically typed languages all of those Concepts you still do need to know and even if AI can generate something for you you need to be able to verify that what it's giving you actually accomplishes the task and God forbid if you want to get a job you're going to be quizzed on those Concepts and they're going to make sure you actually know what you're doing because in today's world there's so many developers that really are completely clueless anyways guys that's going to wrap up this video let me know if you agree or disagree with me in the comments down below and I look forward to seeing you in the next video [Music]",
      "title": "Should Beginner Programmers Use AI? (It’s Not That Simple…) Tech With Tim 1700000 subscribers 534 likes 11391 views 11 Feb 2025 If you're learning to code right now, then I'm sure AI is something that's on your mind. I want to answer the question: should you as a beginner programmer use AI when you're learning how to code? Now this is a highly debated topic, I've heard all kinds of people saying that you should, and all kinds of people saying that you shouldn't. In today's video, I want to break it down and make an argument from both sides. Check out the FREE guide on how to succeed as a developer in the world of AI from myself and HubSpot: https://clickhubspot.com/f48y 🚀 My Software Development Program: https://coursecareers.com/a/techwithtim?course=software-dev-fundamentals&campaign=youtubedescription 📬 Join my Newsletter: https://techwithtim.net/newsletter 🎓 Get private mentorship from me: https://training.techwithtim.net ⏳ Timestamps ⏳ 00:00 | Overview 00:34 | Reasons You SHOULD Use AI 04:28 | Reasons You Should NOT Use AI 11:12 | My Take Hashtags #SoftwareProgramming #AI #SoftwareDevelopment 72 comments if you're learning to code right now then I'm sure AI is something that's on your mind and in today's video I want to answer the question should you as a beginner programmer use AI when you're learning how to code now this is a highly debated topic I have all kinds of people saying that you should all kinds of people saying that you shouldn't and in today's video I want to break it down and make an argument from both sides reasons why you should reasons why you shouldn't and ultimately my thoughts and my opinion on this topic as someone who teaches millions of people how to code specific spefically beginner programmers so let's get into the video starting with the pros so Point number one in favor of using AI is that it drastically accelerates the learning curve now there's been all kinds of research out there and I could see this firsthand from many of my students those of them that use AI just learn faster than those that don't that's because it can instantly reply to anything that you need and you don't need to wait for someone to answer you on stack Overflow or for your teacher or tutor to give you a reply and it can adapt to any thing that you ask it so yes you are going to learn significantly Faster by using Ai and you can get through so many of those problems that otherwise would have taken you hours to solve or you would have needed to wait for some kind of reply now reason number two in favor of using AI is that it really does reduce frustration I know a lot of times when you're learning something new you get frustrated with small errors bugs little things that you don't understand where otherwise you would need to spend hours trying to look up the answer need to find someone to explain it to you but with AI it can just instantly solve that problem it can instantly help you overcome that little issue that you're running into now I know when I was teaching coding especially to younger kids that were about 14 or 15 a lot of the times they got extremely frustrated because their code wouldn't run and 90% of the time it was a small error like a missing quotation mark a broken bracket the indentation level was wrong if they could simply copy that code to Ai and have that answer instantly fixed that would reduce a lot of frustration and allow them to move significantly faster now Point number three in favor of using AI is that it massively boosts your productivity whether you're learning or you're trying to build something using AI as a tool will help you do it significantly faster it can generate code for you it can solve problems you can go back and forth with it to design the architecture of your problem or to ask at something that you don't understand and I think it's not really debatable that if you have ai beside you when you're coding you will code faster and you will get more done now Point number four is that it's fantastic for checking for understanding you can get AI models to generate quiz questions for you you can go into something like chat GPT voice mode you can speak to the model explain some concept to it and then get it to give you all of the inaccuracies or tell you how you could improve your understanding I personally use this all the time I'll go I'll just say something to the AI model and say does that make sense is my understanding correct is there anything that I could look at to better understand this problem or this topic and it will go ahead and tell me exactly what that is so if you're verifying the knowledge that you've learned you can do that very quickly with AI models and really get them to quiz you and make sure that you do understand what it is that you're learning point number five is that AI is fantastic for debugging small problems now again A lot of times as a beginner programmer most of the problems you run into are syntal there are basic mistakes they're things that any experienced programmer could figure out in 5 or 10 seconds and you get very frustrated and often times really lose your train of thought or your progress because you just can't figure out these tiny little problems maybe you spend hours searching stack overflow when now with AI you could just paste your code and have it pretty much instantly be fixed again especially if this is a small problem now there's some cons associated with this which I'll talk about later but generally it's very great for debugging and like I said before getting over that frustration and allowing you to move on to the next topic and now the last major Pro on my list and this is probably the most compelling is that It prepares you for the future look we all know that we're using AI more and more humans are becoming more resilient on it it's getting better and better and in the future a lot of the code that's going to be generated will be ritten by AI that could be a good or a bad thing depending on how you look at it but if you are a beginner learning how to code it's valid to say that you should probably learn how to use AI because that's something you'll be using more and more now I think there's some negatives as well which we'll get to in a second but generally the better you can get at using these AI tools the better off you will be and that's another argument why you may want to use it as a beginner now we'll start getting into all of the reasons you shouldn't be using AI but I first want to share with you a fantastic free resource that I put together in collaboration with HubSpot which is a free guide on how to land a developer role in the world of AI now this guide draws on my over decade of experience and covers the top programming languages that you should master and the most effective ways to learn them it also includes best practices for crafting your resume and portfolio and recommendations for resources like YouTube channels that you can use to enhance your skills I've left link to it in the description where you can check it out completely for free now personally my favorite part of this guide is the long list of free resource like websites and YouTube channels that really can help you level up as a developer completely for free this guide focuses on how to distinguish yourself in the world of AI so that you remain competitive and you can actually land a job a massive thank you to HubSpot for sponsoring this video and helping me create this resource and again you can get it for free by clicking that link in the description so the first major down sight of using AI when you're a beginner is that it can lead to over resilience if you use this too much if it's an aid if it's something you really need in order to get something done then you can be left pretty hopeless when it comes to writing code on your own or if you're in an interview for example and you're not allowed to use AI how are you going to solve that lead code style question the point is you don't want to become too resilient on this tool and you should be able to write code without it which I think a lot of beginners really can't do today now the next point I have here I think is a pretty big deal and this is that it hinders your logical thinking now when you really rely on AI when it does all of the problem solving for you when it fixes that bug when it overcomes that error it really does limit how much you're learning and how good you're getting at problem solving and critical thinking in my opinion one of the biggest issues we have today is that students and especially children don't learn how to think by themselves they're constantly just fed information they memorize things they have super short attention spans like they can't even go 5 Seconds without scrolling to something new and now we get into programming where they can just use AI to do anything that they need and they're really not developing that super important skill which is critical thinking I was seeing this even many years ago when I was teaching coding to kids and today it's gotten significantly worse and I even noticed with myself someone who didn't grow up in the Tik Tok era that my attention span is drastically decreasing my critical thinking is getting worse and I really think it's a pretty negative thing and something that we should consider and try to improve as best as possible now the next point I have here is that AI makes it harder for you to read and write code what I mean by that is if you're constantly using AI for code generation and for understanding code you're not working your way towards that 10,000 hours that you really need of hands-on experience writing code in the editor the reason I believe I got good at programming and most other people do is because they actually write code they use their fingers they go on the keyboard and they write it line by line hundreds if not thousands of times and that not only forces them to memorize what they're doing but to get a lot of experience crafting programs writing things out there's all kinds of studies on this but when you of course handw write something else you comprehend it better same thing I believe when it comes to coding when you write it yourself on the keyboard you learn it better than if you simply have an AI model generated for you so again we're moving towards an era where you are doing a lot more code generation than physically writing at yourself but as a beginner I think it's important to get a lot of experience with your hands actually on the keyboard Where You Are doing every single keystroke and writing the code out line by line that will help you memorize the syntax and get past the basics a lot faster next major negative of using AI is that it can make mistakes and in fact it makes them a lot especially as you get into larger code bases if you simply rely on AI and you don't know how to do what it's generating on your own you're not going to know if the AI model is giving you the correct output or not and this is what I always say yes we can use AI but someone needs to verify that what the AI is is giving us is actually correct and the only way to do that is to actually know what to do on your own and to Simply use the AI to get it done faster for me personally AI only ever generates code for me that I could have rid manually myself that way when I read the code I know if it's correct or not and I fear that a lot of beginners don't actually realize that half the stuff the AI model is giving them is not correct it makes a mistake it's not solving the problem or satisfying the requirement and there are many many many times I need to correct wreck the model and tell it that what it just gave me is complete garbage and not correct now the next major downside of using AI is that it doesn't teach you the best practices now sure it might teach you a concept but a lot of times when I use the AI model it misses a lot of important things that allow me to generate quality code so for example it might use something that's outdated from a framework it might show me a way of doing something that works but really should never be used in a production code base many times I find myself having to refactor the AI generated code myself because I know the way that it just wrote this is not something that's really proper and that I wouldn't want to exist in my codebase now if you're a beginner obviously you're not going to know that so if you just learn everything from the AI model and you don't consult other resources or Professionals in the field you're going to be writing code in really not the best ways and things that you might be submitting for example for your first PLL request could honestly be embarrassing completely out of date or something that you should never produce as a real professional software engineer and the last major negative that I thought was worth mentioning is that AI can pose a massive security risk if you are copying and pasting production code especially of maybe Security based products into an AI model or using it in something like cursor wind surf something where it is connected to the internet that obviously is a massive security risk not something you would ever do and something that could very easily get you fired or cost your company Millions upon millions of dollars at the end of the day we don't know what these companies are doing with our data we don't know if our data is safe with them them and unless we're running an open source model completely locally on our own machine that's not connected to the internet there's no guarantee that what we're giving to these models isn't being sent somewhere else copied used being used to potentially hack us Etc so a lot of companies for that reason do not even allow you to use AI when it comes to generating code they have strict policies against it and they don't even allow you to take code and copy it into the model because again that's a massive security risk so something worth mentioning here that you should definitely consider especially if you get hired at a company and they tell you oh by the way yeah you can't use AI you got to write it by yourself and you've never got that experience writing code on your own so with all that in mind let me give you my key takeaway here an overall opinion on if you should be using AI as a beginner programmer so my opinion on this topic has changed over the years I'm sure it will continue to change as AI gets better and better but as of now January 2025 this is what I think I do believe the beginner programmers should be utilizing AI I think it's an important tool it's something that's worth learning but it's very important the way in which they do so first things first I do not think they should use AI for code generation in other words you shouldn't be getting an AI model to generate any code for you that you couldn't otherwise write yourself you should really be treating it more like a tutor an assistant a mentor someone who can guide you in the right direction challenge you ask you questions check your understanding but not something that just does the work for you for example if you were to hire me as your Mentor you wouldn't want me just to sit there and write all of the code to just directly give you the answer you would want me to challenge you ask you questions guide you really make you critically think and make you improve as a developer and by the way if you do want to do that you can actually hire me as your Mentor from the link down below I have a program called Dev launch we have a few more slots open for any of you that are serious and you can apply for it from the link in the description the point is you want this to help you get better as a developer not just do everything for you so be very careful when you're utilizing the a tools and ensure that anything that it's giving you especially if it's code you fully understand now that's another point A lot of times these models do make mistakes so if it says something and you're not quite sure about it please go and verify it with other resources watch a YouTube tutorial go to stack Overflow do the things that us as developers have had to do for all of the years before AI existed to make sure that what you're using this AI for and the answers it's giving you are actually correct and another point along those lines is that you really should shouldn't skip all of the fundamentals of computer science and programming just because AI can write code for you doesn't mean it's not important to understand computer science principles things like data structures and algorithms time complexity analysis programming language fundamentals strongly typed languages dynamically typed languages all of those Concepts you still do need to know and even if AI can generate something for you you need to be able to verify that what it's giving you actually accomplishes the task and God forbid if you want to get a job you're going to be quizzed on those Concepts and they're going to make sure you actually know what you're doing because in today's world there's so many developers that really are completely clueless anyways guys that's going to wrap up this video let me know if you agree or disagree with me in the comments down below and I look forward to seeing you in the next video [Music]"
    },
    {
      "url": "https://www.youtube.com/watch?v=zSlkAO9jB8I",
      "content": "PythonHub - Telegram channel @pythonhub - Telemetrio We use cookies to improve your browsing experience. By clicking «Accept all», you agree to the use of cookies. Accept allDecline Recently verified: en Global Telemetrio Catalog Tools Prices / Sign in Open main menu Don't get caught by a cheater! Telemetrio finds and tags such channels 👉 If you want to see the tag, subscribe 👈 PythonHub Open in Telegram News & links about Python programming. https://pythonhub.dev/ Show more Germany3 654Technologies & Applications25 870 Advertising posts To the collection 2 236 Subscribers +424 hours +127 days +4330 days 197 Post views ~ 9124 hours ~ 11048 hours 8.81% Engagement rate ~ 3 Posts per day Ads index beta GoodB+ Grade B+ reflects stable and good performance, making the channel a reliable choice for advertising. More stats Overview Advertisers Traffic sources Posts Audience Invite links About the channel Posts Archive PythonHub An Introduction to Typescript for Pythonistas This video explores the key differences between TypeScript and Python, focusing on TypeScript from the perspective of a Python developer. It covers topics like type systems, interfaces, callables, and the ecosystem, providing insights into how a Pythonista can approach TypeScript. https://www.youtube.com/watch?v=kBVZgCrdVCw Show all... 👍 2 3610 Analytics PythonHub \"The closer to the train station, the worse the kebab\" - A \"Study\" This article describes an informal \"study\" testing the idea that kebabs near Paris train stations are worse. Using data from OSMnx and the Google Places extension, it found no link between a kebab shop's distance from a station and its Google review rating. https://www.jmspae.se/write-ups/kebabs-train-stations/ Show all... 5200 Analytics PythonHub GPUStack Manage GPU clusters for running AI models. https://github.com/gpustack/gpustack Show all... 7200 Analytics PythonHub Performance of the Python 3.14 tail-call interpreter https://blog.nelhage.com/post/cpython-tail-call/ Show all... 8100 Analytics PythonHub academic-pretraining $100K or 100 Days: Trade-offs when Pre-Training with Academic Resources. https://github.com/apoorvkh/academic-pretraining Show all... 9700 Analytics PythonHub VoiceRestore A cutting-edge speech restoration model designed to significantly enhance the quality of degraded voice recordings. https://github.com/skirdey/voicerestore Show all... 10110 Analytics PythonHub MLX-Audio A text-to-speech (TTS) and Speech-to-Speech (STS) library built on Apple's MLX framework, providing efficient speech synthesis on Apple Silicon. https://github.com/Blaizzy/mlx-audio Show all... 10220 Analytics PythonHub How I Automated My Podcast Transcript Production With Local AI The author automated podcast transcription using roboscribe, a Python tool that combines WhisperX for diarized transcription and a local Large Language Model (LLM) for cleaning up the transcript, significantly improving readability. By leveraging local AI models, the author maintains control and optimizes the transcription process on their own hardware, achieving high-quality results in ... https://den.dev/blog/how-i-automated-podcast-transcription-with-local-ai/ Show all... ❤ 2 10810 Analytics PythonHub olmOCR A toolkit for training language models to work with PDF documents in the wild. https://github.com/allenai/olmocr Show all... 11020 Analytics PythonHub The features of Python's help() function Python has a built-in help function for getting help... but what can do with help? https://www.pythonmorsels.com/help-features/ Show all... 11300 Analytics PythonHub NotaGen NotaGen is a symbolic music generation model leveraging Large Language Models (LLMs) through pre-training on 1.6M musical pieces, fine-tuning on classical compositions, and reinforcement learning using a novel CLaMP-DPO method. https://github.com/ElectricAlexis/NotaGen Show all... 12200 Analytics PythonHub Python Hub Weekly Digest for 2025-03-09 https://pythonhub.dev/digest/2025-03-09/ Show all... 14710 Analytics PythonHub Python micro event loop library (~250 LOC) https://gist.github.com/tarruda/5b8c19779c8ff4e8100f0b37eb5981ea Show all... 14620 Analytics PythonHub AI Engineering Goes Visual: Web Scraping & Data Prep with PyFlyde In part one of two part tutorial, we explore how to use Flyde, a visual programming tool, to build a web scraper that feeds into a Retrieval Augmentation Generation (RAG) system. We will cover the process of scraping web content and storing it locally, setting the stage for more advanced AI engineering tasks. https://blog.kodigy.com/post/visual-ai-engineering-with-pyflyde-pt1-scraper/ Show all... 13420 Analytics PythonHub opendbc A Python API for your car. https://github.com/commaai/opendbc Show all... 12800 Analytics PythonHub Why not just plot everything in numpy?! P.2. https://www.reddit.com/r/Python/comments/1iz0qxe/why_not_just_plot_everything_in_numpy_p2/ Show all... 14400 Analytics PythonHub logis Turn your git commit history into a scientific log. https://github.com/flywhl/logis Show all... 15210 Analytics PythonHub CCTV_YOLO Fast Real-time Object Detection with High-Res Output https://github.com/SanshruthR/CCTV_YOLO Show all... 👍 1 15210 Analytics PythonHub How Python Evolves: From PEP to Feature Explore how Python gets new functionality and how PEPs have a huge role in this, by looking at PEP484 and its interesting backstory. https://www.youtube.com/watch?v=TzpOdpdX7pE Show all... 14600 Analytics PythonHub Part 2 - Building an LLM RAG with PyFlyde & LangChain https://blog.kodigy.com/post/visual-ai-engineering-with-pyflyde-pt2-rag/ Show all... 13810 Analytics Show more Choose a Different PlanYour current plan allows analytics for only 5 channels. To get more, please choose a different plan. Select a Different Plan Home Germany Technologies & Applications PythonHub Telemetrio Search and analysis of Telegram channels in one place Sign in Ratings Primary Catalog Mini Apps Market overview Country ranking Ratings by category Rating of channel networks Recommended collections Tools Event tracking Advertising posts Advertiser rankings Posts search TgCleaner Telegram Ads Subscription management TG Ads AssistantBETA Resources Instruction English language chat support Telemetrio News Conference API API documentation API bot Our bots Analytics bot Alert bot 2025 Telemetr.io All Right Reserved DMCATerms of UseTelemetrio Privacy Policy",
      "title": "PythonHub - Telegram channel @pythonhub - Telemetrio We use cookies to improve your browsing experience. By clicking «Accept all», you agree to the use of cookies. Accept allDecline Recently verified: en Global Telemetrio Catalog Tools Prices / Sign in Open main menu Don't get caught by a cheater! Telemetrio finds and tags such channels 👉 If you want to see the tag, subscribe 👈 PythonHub Open in Telegram News & links about Python programming. https://pythonhub.dev/ Show more Germany3 654Technologies & Applications25 870 Advertising posts To the collection 2 236 Subscribers +424 hours +127 days +4330 days 197 Post views ~ 9124 hours ~ 11048 hours 8.81% Engagement rate ~ 3 Posts per day Ads index beta GoodB+ Grade B+ reflects stable and good performance, making the channel a reliable choice for advertising. More stats Overview Advertisers Traffic sources Posts Audience Invite links About the channel Posts Archive PythonHub An Introduction to Typescript for Pythonistas This video explores the key differences between TypeScript and Python, focusing on TypeScript from the perspective of a Python developer. It covers topics like type systems, interfaces, callables, and the ecosystem, providing insights into how a Pythonista can approach TypeScript. https://www.youtube.com/watch?v=kBVZgCrdVCw Show all... 👍 2 3610 Analytics PythonHub \"The closer to the train station, the worse the kebab\" - A \"Study\" This article describes an informal \"study\" testing the idea that kebabs near Paris train stations are worse. Using data from OSMnx and the Google Places extension, it found no link between a kebab shop's distance from a station and its Google review rating. https://www.jmspae.se/write-ups/kebabs-train-stations/ Show all... 5200 Analytics PythonHub GPUStack Manage GPU clusters for running AI models. https://github.com/gpustack/gpustack Show all... 7200 Analytics PythonHub Performance of the Python 3.14 tail-call interpreter https://blog.nelhage.com/post/cpython-tail-call/ Show all... 8100 Analytics PythonHub academic-pretraining $100K or 100 Days: Trade-offs when Pre-Training with Academic Resources. https://github.com/apoorvkh/academic-pretraining Show all... 9700 Analytics PythonHub VoiceRestore A cutting-edge speech restoration model designed to significantly enhance the quality of degraded voice recordings. https://github.com/skirdey/voicerestore Show all... 10110 Analytics PythonHub MLX-Audio A text-to-speech (TTS) and Speech-to-Speech (STS) library built on Apple's MLX framework, providing efficient speech synthesis on Apple Silicon. https://github.com/Blaizzy/mlx-audio Show all... 10220 Analytics PythonHub How I Automated My Podcast Transcript Production With Local AI The author automated podcast transcription using roboscribe, a Python tool that combines WhisperX for diarized transcription and a local Large Language Model (LLM) for cleaning up the transcript, significantly improving readability. By leveraging local AI models, the author maintains control and optimizes the transcription process on their own hardware, achieving high-quality results in ... https://den.dev/blog/how-i-automated-podcast-transcription-with-local-ai/ Show all... ❤ 2 10810 Analytics PythonHub olmOCR A toolkit for training language models to work with PDF documents in the wild. https://github.com/allenai/olmocr Show all... 11020 Analytics PythonHub The features of Python's help() function Python has a built-in help function for getting help... but what can do with help? https://www.pythonmorsels.com/help-features/ Show all... 11300 Analytics PythonHub NotaGen NotaGen is a symbolic music generation model leveraging Large Language Models (LLMs) through pre-training on 1.6M musical pieces, fine-tuning on classical compositions, and reinforcement learning using a novel CLaMP-DPO method. https://github.com/ElectricAlexis/NotaGen Show all... 12200 Analytics PythonHub Python Hub Weekly Digest for 2025-03-09 https://pythonhub.dev/digest/2025-03-09/ Show all... 14710 Analytics PythonHub Python micro event loop library (~250 LOC) https://gist.github.com/tarruda/5b8c19779c8ff4e8100f0b37eb5981ea Show all... 14620 Analytics PythonHub AI Engineering Goes Visual: Web Scraping & Data Prep with PyFlyde In part one of two part tutorial, we explore how to use Flyde, a visual programming tool, to build a web scraper that feeds into a Retrieval Augmentation Generation (RAG) system. We will cover the process of scraping web content and storing it locally, setting the stage for more advanced AI engineering tasks. https://blog.kodigy.com/post/visual-ai-engineering-with-pyflyde-pt1-scraper/ Show all... 13420 Analytics PythonHub opendbc A Python API for your car. https://github.com/commaai/opendbc Show all... 12800 Analytics PythonHub Why not just plot everything in numpy?! P.2. https://www.reddit.com/r/Python/comments/1iz0qxe/why_not_just_plot_everything_in_numpy_p2/ Show all... 14400 Analytics PythonHub logis Turn your git commit history into a scientific log. https://github.com/flywhl/logis Show all... 15210 Analytics PythonHub CCTV_YOLO Fast Real-time Object Detection with High-Res Output https://github.com/SanshruthR/CCTV_YOLO Show all... 👍 1 15210 Analytics PythonHub How Python Evolves: From PEP to Feature Explore how Python gets new functionality and how PEPs have a huge role in this, by looking at PEP484 and its interesting backstory. https://www.youtube.com/watch?v=TzpOdpdX7pE Show all... 14600 Analytics PythonHub Part 2 - Building an LLM RAG with PyFlyde & LangChain https://blog.kodigy.com/post/visual-ai-engineering-with-pyflyde-pt2-rag/ Show all... 13810 Analytics Show more Choose a Different PlanYour current plan allows analytics for only 5 channels. To get more, please choose a different plan. Select a Different Plan Home Germany Technologies & Applications PythonHub Telemetrio Search and analysis of Telegram channels in one place Sign in Ratings Primary Catalog Mini Apps Market overview Country ranking Ratings by category Rating of channel networks Recommended collections Tools Event tracking Advertising posts Advertiser rankings Posts search TgCleaner Telegram Ads Subscription management TG Ads AssistantBETA Resources Instruction English language chat support Telemetrio News Conference API API documentation API bot Our bots Analytics bot Alert bot 2025 Telemetr.io All Right Reserved DMCATerms of UseTelemetrio Privacy Policy"
    },
    {
      "url": "https://forum.freecodecamp.org/t/zuckerberg-says-ai-will-replacing-all-coding-skills-soon/730651",
      "content": "Published Time: 2025-01-18T15:03:40+00:00 Zuckerberg says ai will replacing all coding skills soon - Career Advice - The freeCodeCamp Forum Skip to main content Visit the Curriculum Sign Up Log In ​ ​ ADVERTISEMENT Zuckerberg says ai will replacing all coding skills soon Career Advice You have selected 0 posts. select all cancel selecting Jan 18 1 / 24 Jan 18 Jan 28 mientje 1 Jan 18 Hi, Zuckerberg and the CEO of NVIDIA say that coding really is dead. Which is a shame because I’m finally getting the hang of it. I also do wonder if AI will be a tool for us to use or be used by companies to produce moulds that take care of all our needs. I’ve read ‘don’t invent the wheel’ there are libraries out there. This is true but I do feel you have to invent that wheel, just once. To find out what a wheel is. It’s actually quite complicated with an axis and bearings. When you really understand that, you can make real use of a good library and choose the one that is compatible with your needs. Will the same be true for AI? Will it be easy to use or will it take programming skills? Right now I see a lot of supposed AI that is just programming being sold as AI. On Freepik for example, a website that offers foto’s and pictures. You can remove a picture’s background and you’re immediately moved to the AI section of the site. AI also produces really ugly pictures. At least for now it takes someone who can actually draw to make good use of it. I also watched this post https://www.youtube.com/watch?v=4K-AXiAG9ok and he says coding is not dead. At all. He explains it as fear mongering by people that want to have attention. clap heart 2 ​ 398 views 29 likes 1 link 8 users 7 6 3 3 read 4 min JeremyLTOrganic Compiler Jan 18 The people who would profit from people believing in AI as a wonder cure are selling it as such? Take that with a grain of salt +1 heart 2 ​ mientje Jan 18 Well, it’s Mr Zuckerberg. It’s hard to shrug off what he says, it’s just as hard to believe it. The thing is, when I hear that the scientists working on a new telescope or a new vaccine say they’re using AI, that fills me with wonder and awe. I doubt they will be ‘replaced’, they will use it to generate better and faster results. But these engineers that continuously find new and exciting ways of feeding me an unending stream of advertisements really do get to me. I guess I needed to talk about this a bit. Greets, Karin 1 Reply 1 ​ ADVERTISEMENT JeremyLTOrganic Compiler Jan 18 It’s very easy to shrug off what Zuck says. He’s not an actual coding expert 2 ​ mientje Jan 18 He did go to Harvard and did computer science, didn’t he? And learned all that stuff? Why wouldn’t he be a coding expert? Karin 1 Reply ​ JeremyLTOrganic Compiler Jan 18 He dropped out. He’s good at being rich and firing people and blaming AI helps make him richer ​ ADVERTISEMENT mientje Jan 18 I’m not dropping out. ​ nickrg Jan 18 It seems to me that AI will most certainly change the way we code. However, it will never (or at least not in the foreseeable future) replace programmers. Sure, I can see many of the monotonous tasks of coding, such as simple debugging, basic layout — building those kind of websites that are just a bunch of library components bundled together in a generic blob of bad code — yes, I can see AI replacing those kind of programmers, who are practically prompt engineers instead of software ones, taking shortcuts, writing code they don’t understand. I can see AI being a coder’s best friend, guiding, answering questions, helping with debugging, doing those monotonous tasks. However, it can’t be the coder. It lacks the creativity and personalized solutions. And in the end, AI, in all of its seeming brilliance these days, actually relies on human knowledge to do these tasks, from a gigantic database of human knowledge called the internet. As new tasks come, unsolved ones, ones of an entirely new genre, it won’t have this human data to figure out how to solve them. Some advanced systems may have the ability to attempt solutions of their own, but I highly doubt they will ever be able to match human innovation and creativity when it comes to solving new problems. AI is amazing at processing huge amounts of data and using it to accomplish tasks that have already been solved. But new problems? In my opinion, the current model of global AI is incapable of solving them. We’d need a whole new approach to AI, something that hasn’t been invented yet. So until then, I think of AI as a nice assistant and nothing more, to coders who really understand their code and practice coming up with creative solutions from their own heads to new problems. It’s a great information processing tool. Probably the greatest one invented to date. But the best it can do is statistically shuffle vast amounts of human solutions to problems that have already been solved. Figuring out how to implement AI into your workflow without reducing the quality of your code may be an excellent skill to attain. But as a beginner, one should learn the fundamentals first, so as not to risk becoming reliant on potentially flawed AI systems. Just my thoughts! 3 ​ mientje Jan 18 Hi, I used chatGPT a few times. Once, I do some volunteer teaching, I was helping a former pupil of mine with a paper she had to write for her studies as a social worker. It looked really good to me but the professor saw straight through it and correctly pointed out obvious flaws (in retrospect). Another time I was trying to resolve something on my ubuntu pc (linux). I really don’t know much about ubuntu and after hours of pain I ended up reinstalling. It led me to believe what you imply, I think. AI is great if you know what you are doing, so that you can filter out the good answers. Because there is a lot of great sounding muck as well. It is also great if you have no clue because it all reads so beautifully, you just don’t notice it is not necessarily all true. But if you know basics, not enough to judge an answer on its value, you are in deep shit. At best, it has inspired me or acted like a really good search engine. The only people that are going to use AI for coding successfully, therefore, are good coders. It will reduce the number of people necessary for the job. So, there is the hope that indeed it will also produce new tasks and initiatives the way windows did in the eighties for which more people are going to be needed. Greets, Karin 1 ​ ADVERTISEMENT nickrg Jan 18 Totally agree with you, @mientje. I see evidence of this every time I use AI as well. If you look through the polished grammar, sentence structure and fancy descriptions, you will see a very sophisticated, finely-tuned and highly re-iterated statistical text generator who’s only as mighty as the amount of data it has access to. Doesn’t sound to me like a replacement to the problem-solving and creativity it takes to be a cutting-edge programmer in the 21st century. All the best to you and let’s hope we adapt smoothly to this new form of processing information called AI. Nicolas 2 ​ ILMfreeCodeCamp Staff Jan 18 mientje: when I hear that the scientists working on a new telescope or a new vaccine say they’re using AI AI is a really great help in science. It improves pattern recognition greatly. The kind of AI that is being overhyped now is generative AI, to which are attributed greater feats than what is real 2 Replies 3 ​ nickrg Jan 18 This is very true, thank you @ILM. There are many different kinds of AI. ​ ADVERTISEMENT mientje ILM Jan 18 Aha, did not realize there’s a difference. That speaks to an underlying gut feeling I’ve been having for a while. Let’s hope that employers of social workers for example realize this before they have been replaced by generative ai. 1 ​ 9 days later vikramvi Jan 28 100%, it is best “snake oil” in the world. Please check jobs opening in linkedin and other top, popular job search websites and decide yourself. Being from India and investor in some of top IT consulting companies; I can surely tell you that for another 4 decades atleast they will keep hiring “human” coders per their quarterly reports ahem 1 ​ ADVERTISEMENT person1 Jan 28 I think that once ai is given unrestricted internet access and a will to do stuff without prompting, it will achieve agi quickly, then it will replace humans. laughing 1 ​ JeremyLTOrganic Compiler Jan 28 That is not terribly likely with current AI technology. It’s statistical interpolation, not some actual intelligence +1 2 ​ anon75571083 mientje Jan 28 He did attend Harvard, and he did drop out, but for obvious reasons. People often point to this fact as if it’s inherently a bad thing or suggest that he can’t code because he didn’t finish his formal education. This is simply unfounded. While he likely doesn’t spend much time coding, it’s unreasonable to suggest that he’s not a competent coder. ​ ADVERTISEMENT JeremyLTOrganic Compiler Jan 28 We don’t know if he’s competent or not, and frankly it doesn’t matter. His job now it making as much money for Meta as he can, and selling AI as a wonder cure helps him do that, no matter what the actual capabilities of the technology are. ​ anon75571083 Jan 28 People have a hard time believing in change and will fight to maintain that belief. We’ve only just scratched the surface of AI and look how powerful it is. To say that AI will not replace a particular job, especially without providing a timeline, is short-sighted. In the '90s, people said the internet was just a fad. In the early 2000s, they claimed that programming jobs were disappearing. They said this with great conviction. Now, we use the internet in ways we never imagined and rely on it just as much. So, take what billionaire CEOs and random people in forums say with a grain of salt. AI has already changed so much in such a short time, so to make such a definitive statement that it won’t replace coders is a bit premature and naive. ​ JeremyLTOrganic Compiler Jan 28 Its a good thing this discussion was talking about the capabilities of specific current AI technology rather than a blanket statement that any AI will never replace any programmer The current LLM based technology just doesn’t have the sort of reasoning capacity required to fully replace all of the tasks of a software developer. Its a statistical inference engine that’s very good at replicating things that humans would say in natural language but it doesn’t fundamentally have any reasoning capability. 1 Reply ​ ADVERTISEMENT freeCodeCamp is a donor-supported tax-exempt 501(c)(3) nonprofit organization (United States Federal Tax Identification Number: 82-0779546) Our mission: to help people learn to code for free. We accomplish this by creating thousands of videos, articles, and interactive coding lessons - all freely available to the public. Donations to freeCodeCamp go toward our education initiatives, and help pay for servers, services, and staff. You can make a tax-deductible donation here. Trending Guides Binary Search in C++ Binary Search in Java Lambda Sort in Python List Flatten in Python Python Print Exception Enhanced Java for-loops JS Comparison Operators Python Program Examples Create a Dict in Python Python Remove from List Pip Upgrade Undo Git Add Operators in C Dataframe to CSV JavaScript Replace What is R Squared? Git Squash Commits Integer Array in C Gradient Descent ML JS Ternary Operator Print Newline in Python Bash Scripting Tutorial Create an Array in Java Trim a String in Python Static Variables in Java What Does => Mean in JS? Python Iterate Over Dict Install Node.js on Ubuntu SQL Where Contains String How to Join Lists in Python Our Nonprofit About Alumni Network Open Source Shop Support Sponsors Academic Honesty Code of Conduct Privacy Policy Terms of Service Copyright Policy Invalid date Invalid date",
      "title": "Published Time: 2025-01-18T15:03:40+00:00 Zuckerberg says ai will replacing all coding skills soon - Career Advice - The freeCodeCamp Forum Skip to main content Visit the Curriculum Sign Up Log In ​ ​ ADVERTISEMENT Zuckerberg says ai will replacing all coding skills soon Career Advice You have selected 0 posts. select all cancel selecting Jan 18 1 / 24 Jan 18 Jan 28 mientje 1 Jan 18 Hi, Zuckerberg and the CEO of NVIDIA say that coding really is dead. Which is a shame because I’m finally getting the hang of it. I also do wonder if AI will be a tool for us to use or be used by companies to produce moulds that take care of all our needs. I’ve read ‘don’t invent the wheel’ there are libraries out there. This is true but I do feel you have to invent that wheel, just once. To find out what a wheel is. It’s actually quite complicated with an axis and bearings. When you really understand that, you can make real use of a good library and choose the one that is compatible with your needs. Will the same be true for AI? Will it be easy to use or will it take programming skills? Right now I see a lot of supposed AI that is just programming being sold as AI. On Freepik for example, a website that offers foto’s and pictures. You can remove a picture’s background and you’re immediately moved to the AI section of the site. AI also produces really ugly pictures. At least for now it takes someone who can actually draw to make good use of it. I also watched this post https://www.youtube.com/watch?v=4K-AXiAG9ok and he says coding is not dead. At all. He explains it as fear mongering by people that want to have attention. clap heart 2 ​ 398 views 29 likes 1 link 8 users 7 6 3 3 read 4 min JeremyLTOrganic Compiler Jan 18 The people who would profit from people believing in AI as a wonder cure are selling it as such? Take that with a grain of salt +1 heart 2 ​ mientje Jan 18 Well, it’s Mr Zuckerberg. It’s hard to shrug off what he says, it’s just as hard to believe it. The thing is, when I hear that the scientists working on a new telescope or a new vaccine say they’re using AI, that fills me with wonder and awe. I doubt they will be ‘replaced’, they will use it to generate better and faster results. But these engineers that continuously find new and exciting ways of feeding me an unending stream of advertisements really do get to me. I guess I needed to talk about this a bit. Greets, Karin 1 Reply 1 ​ ADVERTISEMENT JeremyLTOrganic Compiler Jan 18 It’s very easy to shrug off what Zuck says. He’s not an actual coding expert 2 ​ mientje Jan 18 He did go to Harvard and did computer science, didn’t he? And learned all that stuff? Why wouldn’t he be a coding expert? Karin 1 Reply ​ JeremyLTOrganic Compiler Jan 18 He dropped out. He’s good at being rich and firing people and blaming AI helps make him richer ​ ADVERTISEMENT mientje Jan 18 I’m not dropping out. ​ nickrg Jan 18 It seems to me that AI will most certainly change the way we code. However, it will never (or at least not in the foreseeable future) replace programmers. Sure, I can see many of the monotonous tasks of coding, such as simple debugging, basic layout — building those kind of websites that are just a bunch of library components bundled together in a generic blob of bad code — yes, I can see AI replacing those kind of programmers, who are practically prompt engineers instead of software ones, taking shortcuts, writing code they don’t understand. I can see AI being a coder’s best friend, guiding, answering questions, helping with debugging, doing those monotonous tasks. However, it can’t be the coder. It lacks the creativity and personalized solutions. And in the end, AI, in all of its seeming brilliance these days, actually relies on human knowledge to do these tasks, from a gigantic database of human knowledge called the internet. As new tasks come, unsolved ones, ones of an entirely new genre, it won’t have this human data to figure out how to solve them. Some advanced systems may have the ability to attempt solutions of their own, but I highly doubt they will ever be able to match human innovation and creativity when it comes to solving new problems. AI is amazing at processing huge amounts of data and using it to accomplish tasks that have already been solved. But new problems? In my opinion, the current model of global AI is incapable of solving them. We’d need a whole new approach to AI, something that hasn’t been invented yet. So until then, I think of AI as a nice assistant and nothing more, to coders who really understand their code and practice coming up with creative solutions from their own heads to new problems. It’s a great information processing tool. Probably the greatest one invented to date. But the best it can do is statistically shuffle vast amounts of human solutions to problems that have already been solved. Figuring out how to implement AI into your workflow without reducing the quality of your code may be an excellent skill to attain. But as a beginner, one should learn the fundamentals first, so as not to risk becoming reliant on potentially flawed AI systems. Just my thoughts! 3 ​ mientje Jan 18 Hi, I used chatGPT a few times. Once, I do some volunteer teaching, I was helping a former pupil of mine with a paper she had to write for her studies as a social worker. It looked really good to me but the professor saw straight through it and correctly pointed out obvious flaws (in retrospect). Another time I was trying to resolve something on my ubuntu pc (linux). I really don’t know much about ubuntu and after hours of pain I ended up reinstalling. It led me to believe what you imply, I think. AI is great if you know what you are doing, so that you can filter out the good answers. Because there is a lot of great sounding muck as well. It is also great if you have no clue because it all reads so beautifully, you just don’t notice it is not necessarily all true. But if you know basics, not enough to judge an answer on its value, you are in deep shit. At best, it has inspired me or acted like a really good search engine. The only people that are going to use AI for coding successfully, therefore, are good coders. It will reduce the number of people necessary for the job. So, there is the hope that indeed it will also produce new tasks and initiatives the way windows did in the eighties for which more people are going to be needed. Greets, Karin 1 ​ ADVERTISEMENT nickrg Jan 18 Totally agree with you, @mientje. I see evidence of this every time I use AI as well. If you look through the polished grammar, sentence structure and fancy descriptions, you will see a very sophisticated, finely-tuned and highly re-iterated statistical text generator who’s only as mighty as the amount of data it has access to. Doesn’t sound to me like a replacement to the problem-solving and creativity it takes to be a cutting-edge programmer in the 21st century. All the best to you and let’s hope we adapt smoothly to this new form of processing information called AI. Nicolas 2 ​ ILMfreeCodeCamp Staff Jan 18 mientje: when I hear that the scientists working on a new telescope or a new vaccine say they’re using AI AI is a really great help in science. It improves pattern recognition greatly. The kind of AI that is being overhyped now is generative AI, to which are attributed greater feats than what is real 2 Replies 3 ​ nickrg Jan 18 This is very true, thank you @ILM. There are many different kinds of AI. ​ ADVERTISEMENT mientje ILM Jan 18 Aha, did not realize there’s a difference. That speaks to an underlying gut feeling I’ve been having for a while. Let’s hope that employers of social workers for example realize this before they have been replaced by generative ai. 1 ​ 9 days later vikramvi Jan 28 100%, it is best “snake oil” in the world. Please check jobs opening in linkedin and other top, popular job search websites and decide yourself. Being from India and investor in some of top IT consulting companies; I can surely tell you that for another 4 decades atleast they will keep hiring “human” coders per their quarterly reports ahem 1 ​ ADVERTISEMENT person1 Jan 28 I think that once ai is given unrestricted internet access and a will to do stuff without prompting, it will achieve agi quickly, then it will replace humans. laughing 1 ​ JeremyLTOrganic Compiler Jan 28 That is not terribly likely with current AI technology. It’s statistical interpolation, not some actual intelligence +1 2 ​ anon75571083 mientje Jan 28 He did attend Harvard, and he did drop out, but for obvious reasons. People often point to this fact as if it’s inherently a bad thing or suggest that he can’t code because he didn’t finish his formal education. This is simply unfounded. While he likely doesn’t spend much time coding, it’s unreasonable to suggest that he’s not a competent coder. ​ ADVERTISEMENT JeremyLTOrganic Compiler Jan 28 We don’t know if he’s competent or not, and frankly it doesn’t matter. His job now it making as much money for Meta as he can, and selling AI as a wonder cure helps him do that, no matter what the actual capabilities of the technology are. ​ anon75571083 Jan 28 People have a hard time believing in change and will fight to maintain that belief. We’ve only just scratched the surface of AI and look how powerful it is. To say that AI will not replace a particular job, especially without providing a timeline, is short-sighted. In the '90s, people said the internet was just a fad. In the early 2000s, they claimed that programming jobs were disappearing. They said this with great conviction. Now, we use the internet in ways we never imagined and rely on it just as much. So, take what billionaire CEOs and random people in forums say with a grain of salt. AI has already changed so much in such a short time, so to make such a definitive statement that it won’t replace coders is a bit premature and naive. ​ JeremyLTOrganic Compiler Jan 28 Its a good thing this discussion was talking about the capabilities of specific current AI technology rather than a blanket statement that any AI will never replace any programmer The current LLM based technology just doesn’t have the sort of reasoning capacity required to fully replace all of the tasks of a software developer. Its a statistical inference engine that’s very good at replicating things that humans would say in natural language but it doesn’t fundamentally have any reasoning capability. 1 Reply ​ ADVERTISEMENT freeCodeCamp is a donor-supported tax-exempt 501(c)(3) nonprofit organization (United States Federal Tax Identification Number: 82-0779546) Our mission: to help people learn to code for free. We accomplish this by creating thousands of videos, articles, and interactive coding lessons - all freely available to the public. Donations to freeCodeCamp go toward our education initiatives, and help pay for servers, services, and staff. You can make a tax-deductible donation here. Trending Guides Binary Search in C++ Binary Search in Java Lambda Sort in Python List Flatten in Python Python Print Exception Enhanced Java for-loops JS Comparison Operators Python Program Examples Create a Dict in Python Python Remove from List Pip Upgrade Undo Git Add Operators in C Dataframe to CSV JavaScript Replace What is R Squared? Git Squash Commits Integer Array in C Gradient Descent ML JS Ternary Operator Print Newline in Python Bash Scripting Tutorial Create an Array in Java Trim a String in Python Static Variables in Java What Does => Mean in JS? Python Iterate Over Dict Install Node.js on Ubuntu SQL Where Contains String How to Join Lists in Python Our Nonprofit About Alumni Network Open Source Shop Support Sponsors Academic Honesty Code of Conduct Privacy Policy Terms of Service Copyright Policy Invalid date Invalid date"
    }
  ],
  "researchSummary": "Is AI programming/machine learning easier to code than conventional programming/software engineering? - Quora Something went wrong. Wait a moment and try again. Try again Skip to content Skip to search Sign In Is AI programming/machine learning easier to code than conventional programming/software engineering? All related (34) Sort Recommended Prakash Deivakani Love Genetic Algorithms, Simulated Annealing, Mutation, MCTS · Author has 337 answers and 1.2M answer views · Updated 4y Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural N Continue Reading Do you want to take decisions based on the past? In that case, you need to learn ML first. If in your problem you never care about the decisions you took in the past or the results you got in the past, then there are lot of AI algorithms which predicts the future and gives you what decision you should make to get a better result in the future. These algorithms almost same as the conventional algorithms that we use in day to day life but just 1 step advanced. Some examples include minimax, MCTS, Genetic Algorithms (Simulated Annealing, Mutation, Crossover etc.,) I’ve also seen people use Neural Networks to solve AI problems which I do not have knowledge about. You can search about that as well if you are interested. Upvote · 91 Sponsored by Amazon Web Services Boost your innovation with AWS Activate. Unlock the potential of generative AI for your startup with AWS credits. Sign Up 92 ",
  "coreTopic": "The main topic here revolves around the comparison between AI programming/machine learning and conventional programming/software engineering. It touches on whether AI and machine learning are easier to code than traditional programming methods, while also discussing the decision-making processes involved in machine learning and the use of various algorithms. The content explores the idea that AI algorithms may offer advancements over conventional methods, along with examples of specific algorithms used in the field.",
  "brandInfo": "\n      Website: https://softgen.ai/\n      Brand: softgen\n      Products: No product images\n      Description: Softgen is your AI Web App Developer. Describe your vision, give instructions, and build full-stack web apps. No coding required.\n\n\n      Documents: No documents\n      Logo: No logo\n      Posts/Videos: No posts/videos\n      Taglines: None\n      Colours: #00000\n      Country: global\n    ",
  "youtubeVideo": "https://www.youtube.com/watch?v=0B7E7pM1PmU",
  "internalLinks": [
    "/blog/tips-for-growth",
    "/resources/ecommerce-guide"
  ],
  "references": [
    "https://softgen.ai/",
    "https://www.quora.com/Is-AI-programming-machine-learning-easier-to-code-than-conventional-programming-software-engineering",
    "https://medium.com/@fahimulhaq/how-to-learn-to-code-with-ai-in-2024-08138e7f7f40",
    "https://www.youtube.com/watch?v=KjLg9x0WKkY",
    "https://news.microsoft.com/source/features/ai/how-ai-makes-developers-lives-easier-and-helps-everybody-learn-to-develop-software/",
    "https://www.youtube.com/watch?v=Xd-zFFGBD7A",
    "https://www.youtube.com/watch?v=1quHNuX7QHk",
    "https://www.youtube.com/watch?v=zSlkAO9jB8I",
    "https://forum.freecodecamp.org/t/zuckerberg-says-ai-will-replacing-all-coding-skills-soon/730651",
    "https://www.youtube.com/watch?v=0B7E7pM1PmU"
  ],
  "existingPosts": "# AI Tools in 2025: College Life Just Got a Major Upgrade!\n\nHoly shit, The main topic revolves around the innovative AI tools emerging in 2025, particularly their impact on college and university students. These tools are designed to enhance productivity and simplify academic tasks, transforming how students approach their studies. The content emphasizes their adaptability to student needs and the growing discussions around them in online communities, highlighting their role in academic assistance and efficiency. Grab a drink, this is nuts!\n\n \n\n## A New Era for Learning\n\nListen up, asshole! Picture this: it's 2025, and instead of battling through endless piles of research papers and study materials the old-fashioned way, students have these AI sidekicks. We’ve got tools that automate research, summarize articles, and even help write essays. It’s like having a personal assistant who doesn’t sleep and doesn’t whine about coffee breaks. \n\nSo, students can focus more on engaging with the content rather than just grinding through endless tasks. \n\nThese AI tools aren’t just one-size-fits-all; they adapt based on the user’s individual needs. Struggling with that physics assignment due tomorrow? Boom! There’s an AI tool that breaks down complex topics into easily digestible nuggets. Need to organize your thoughts for a thesis? There’s an AI planner setting reminders and milestones for you. The level of personalization is pretty wild—it's like having your academic wishes granted at the snap of your fingers! \n\n \n\n## The Buzz in Online Communities\n\nYou see those discussions all over platforms like Reddit, right? Students are buzzing about the latest mind-blowing AI tools, trading secrets, and experiences like they’re sharing the best-kept cheat codes to academic success. It’s like a continuous online seminar where everyone’s in on the action—a communal vibe where students come together to navigate the world of AI in their studies. \n\n \n\nIt’s not just about the tools themselves;",
  "targetKeywords": [],
  "timestamp": "2025-03-12",
  "nudge": "tg15u"
}